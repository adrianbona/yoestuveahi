{"version":3,"sources":["redux/utils/saga.js","redux/modules/authentication.js","redux/modules/users.js","redux/modules/locations.js","redux/modules/registries.js","redux/modules/tests.js","redux/modules/notifications.js","redux/modules/index.js","redux/api/axios.js","components/authentication/localStorage.js","components/authentication/session.js","redux/api/authentication.js","redux/api/users.js","redux/sagas/authentication.js","redux/api/locations.js","redux/sagas/locations.js","redux/api/notifications.js","redux/sagas/notifications.js","redux/api/registries.js","redux/sagas/registries.js","redux/sagas/users.js","redux/api/tests.js","redux/sagas/tests.js","redux/sagas/index.js","redux/store.js","serviceWorker.js","components/GlobalStyles.js","mixins/chartjs.js","theme/index.js","theme/shadows.js","theme/typography.js","layouts/DashboardLayout/NavBar/NavItem.js","layouts/DashboardLayout/NavBar/index.js","components/Logo.js","components/SimpleModal.js","components/test/LoadTestModal.js","views/location/LocationListView/LocationCard.js","components/registry/ScanQRCodeModal.js","components/LocationSearchInput.js","redux/api/photos.js","components/location/AddLocationModal.js","layouts/DashboardLayout/TopBar.js","layouts/DashboardLayout/index.js","layouts/MainLayout/TopBar.js","layouts/MainLayout/index.js","components/Page.js","views/user/UserListView/Results.js","components/NoResults.js","views/user/UserListView/index.js","views/notification/NotificationListView/Results.js","views/notification/NotificationListView/index.js","views/reports/DashboardView/ContagionsByDate.js","views/reports/DashboardView/UsersByStatus.js","components/Map.js","views/reports/DashboardView/index.js","views/auth/LoginView.js","views/auth/LogoutView.js","views/errors/NotFoundView.js","views/registry/RegistryListView/Results.js","views/registry/RegistryListView/index.js","views/settings/SettingsView/UserDetails.js","views/settings/SettingsView/index.js","components/location/QRCodeDisplayModal.js","views/location/LocationListView/Results.js","views/location/LocationListView/index.js","views/test/TestListView/Results.js","views/test/TestListView/index.js","components/authentication/EnsureAuthentication.js","routes.js","App.js","index.js"],"names":["createSagaActions","type","REQUEST","SUCCESS","FAILURE","constants","AUTHENTICATION_LOGIN","AUTHENTICATION_LOGOUT","AUTHENTICATION_UPDATE_DETAILS","AUTHENTICATION_REFRESH","actions","email","password","name","isAdministrator","initialState","loggingIn","error","user","USERS_GET","USERS_REFRESH","loading","list","LOCATIONS_GET","LOCATIONS_CREATE","LOCATIONS_RESET","data","REGISTRIES_GET","REGISTRIES_CREATE","REGISTRIES_RESET","TESTS_GET","TESTS_LOAD","TESTS_RESET","NOTIFICATIONS_GET","NOTIFICATIONS_REFRESH","reducers","authentication","state","action","message","users","find","id","locations","sort","locA","locB","localeCompare","location","concat","registries","userA","userB","tests","testA","testB","dateTaken","test","notifications","createRootReducer","combineReducers","instance","axios","create","baseURL","process","headers","google","Accept","key","localStorage","getItem","removeItem","value","setItem","getUserToken","login","post","logout","get","Authorization","getUsers","updateDetails","patch","is_admin","watchLogin","watchLogout","watchUpdateDetails","rootSaga","call","authApi","accessToken","token","creationDate","moment","creation_date","put","takeLatest","usersApi","all","fork","getLocations","createLocation","description","maximumCapacity","openingTime","closingTime","logo","latitude","longitude","maximum_capacity","opening_time","closing_time","watchGetLocations","watchCreateLocation","api","map","currentCapacity","current_capacity","createdAt","created_at","createdBy","created_by","response","watchers","getNotifications","watchGetNotifications","notification","getRegistries","createRegistry","locationId","included_in","watchGetRegistries","watchCreateRegistry","registry","customerName","registered_by_name","locationName","included_in_name","entranceTime","entrance_time","exitTime","exit_time","refreshUsers","watchGetUsers","watchRefreshUsers","userConstants","authConstants","getTests","loadTest","isPositive","date_taken","is_positive","watchGetTests","watchLoadTest","takenBy","taken_by_name","request","sagas","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","trace","traceLimit","compose","sagaMiddleware","createSagaMiddleware","store","createStore","applyMiddleware","run","Boolean","hostname","match","useStyles","makeStyles","createStyles","boxSizing","margin","padding","html","height","width","body","backgroundColor","a","textDecoration","GlobalStyles","Chart","helpers","extend","elements","Rectangle","prototype","draw","left","right","top","bottom","signX","signY","borderSkipped","radius","ctx","this","_chart","vm","_view","borderWidth","cornerRadius","config","options","horizontal","base","x","y","barSize","Math","min","abs","halfStroke","borderLeft","borderRight","borderTop","borderBottom","beginPath","fillStyle","strokeStyle","borderColor","lineWidth","corners","startCorner","indexOf","cornerAt","index","corner","moveTo","i","nextCornerId","floor","xTl","xTr","yTl","yTr","xBl","xBr","yBl","yBr","lineTo","quadraticCurveTo","fill","stroke","theme","createMuiTheme","palette","background","dark","default","colors","common","white","paper","primary","main","orange","secondary","yellow","text","grey","blueGrey","shadows","typography","h1","fontWeight","fontSize","letterSpacing","h2","h3","h4","h5","h6","overline","item","display","paddingTop","paddingBottom","button","color","fontWeightMedium","justifyContent","textTransform","icon","marginRight","spacing","title","active","NavItem","className","href","Icon","rest","classes","ListItem","clsx","disableGutters","Button","activeClassName","component","RouterLink","to","size","items","BarChartIcon","requiresAdminPrivilege","UsersIcon","BellIcon","StorefrontIcon","DirectionsWalk","LocalHospitalIcon","SettingsIcon","mobileDrawer","desktopDrawer","avatar","healthStatus","marginTop","light","accessoriesType","status","eyeType","mouthType","NavBar","props","onMobileClose","openMobile","useLocation","useEffect","pathname","content","Box","flexDirection","alignItems","p","style","avatarStyle","topType","hairColor","clotheType","clotheColor","eyebrowType","skinColor","Typography","variant","Divider","List","filter","Hidden","mdUp","Drawer","anchor","onClose","open","smDown","defaultProps","Logo","alt","src","getModalStyle","transform","lineHeight","container","maxWidth","position","outline","SimpleModal","children","useState","modalStyle","isOpen","setIsOpen","handleClose","Modal","aria-labelledby","aria-describedby","IconButton","onClick","marginBottom","connect","dispatch","testActions","resetTests","userActions","toISOString","selectedDate","setSelectedDate","setIsPositive","onSubmit","event","preventDefault","Card","CardContent","FormControl","FormGroup","aria-label","row","FormControlLabel","control","Grid","Switch","checked","onChange","label","labelPlacement","utils","DateFnsUtils","format","disableFuture","KeyboardButtonProps","Alert","fullWidth","severity","AlertTitle","root","statsItem","statsIcon","large","LocationCard","mb","Avatar","align","gutterBottom","flexGrow","justify","minHeight","scanAgain","registryActions","resetRegistries","locationActions","delay","QRData","setQRData","onScan","parseInt","onError","suggestion","cursor","LocationSearchInput","onSelectedAddress","address","setAddress","handleSelect","selectedAddress","geocodeByAddress","then","results","catch","console","onSelect","shouldFetchSuggestions","length","searchOptions","componentRestrictions","country","highlightFirstSuggestion","getInputProps","suggestions","getSuggestionItemProps","TextField","placeId","getPhotos","params","place_id","fields","maxHeight","resetLocations","setSelectedAddress","placePhotos","setPlacePhotos","getPictures","result","photos","photoSource","photoReference","getPhotoSourceFromReference","photo_reference","initialValues","split","formatted_address","validationSchema","Yup","shape","max","required","integer","values","imageUrl","geometry","lat","lng","handleCreate","errors","handleBlur","handleChange","handleSubmit","touched","helperText","onBlur","disabled","form","marginLeft","TopBar","onMobileNavOpen","navigate","useNavigate","loadTestIsOpen","setLoadTestIsOpen","scanQRCodeIsOpen","setScanQRCodeIsOpen","addLocationIsOpen","setAddLocationIsOpen","shown","AppBar","elevation","Toolbar","xsDown","Tooltip","replace","Badge","badgeContent","customer","overflow","wrapper","flex","breakpoints","up","paddingLeft","contentContainer","isMobileNavOpen","setMobileNavOpen","toolbar","MainLayout","Page","forwardRef","ref","Helmet","Results","limit","setLimit","page","setPage","Table","TableHead","TableRow","TableCell","TableBody","slice","hover","TablePagination","count","onChangePage","newPage","onChangeRowsPerPage","target","rowsPerPage","rowsPerPageOptions","NoResults","Container","mt","contagionSource","ContagionsByDate","useTheme","datasets","indigo","labels","animation","layout","legend","maintainAspectRatio","responsive","scales","xAxes","barThickness","maxBarThickness","barPercentage","categoryPercentage","ticks","fontColor","gridLines","drawBorder","yAxes","beginAtZero","borderDash","borderDashOffset","divider","zeroLineBorderDash","zeroLineBorderDashOffset","zeroLineColor","tooltips","bodyFontColor","enabled","footerFontColor","intersect","mode","titleFontColor","CardHeader","endIcon","seed","Healthy","red","reduce","accumulator","Object","round","hoverBorderColor","keys","cutoutPercentage","textAlign","marker","textShadow","capacity","Marker","showQR","setIsShowingQR","showMap","show","onMouseEnter","onMouseLeave","String","renderAs","SimpleMap","markers","center","zoom","bootstrapURLKeys","defaultCenter","defaultZoom","sm","md","lg","xl","xs","my","Date","getFullYear","LogoutView","propTypes","PropTypes","func","isRequired","image","NotFoundView","isValid","detailsUpdated","setDetailsUpdated","showConfirmation","setShowConfirmation","handleCloseConfirmation","Checkbox","Snackbar","autoHideDuration","SettingsView","QRCodeDisplayModal","selectedLocation","setSelectedLocation","EnsureAuthentication","oneOfType","arrayOf","node","string","routes","path","element","DashboardView","RegistryListView","App","routing","useRoutes","ThemeProvider","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.b51f080b.chunk.js","sourcesContent":["export const createSagaActions = (type) => ({\r\n  REQUEST: `${type}.REQUEST`,\r\n  SUCCESS: `${type}.SUCCESS`,\r\n  FAILURE: `${type}.FAILURE`,\r\n});\r\n\r\nexport default {\r\n  createSagaActions,\r\n};\r\n","import { createSagaActions } from '../utils/saga';\n\n// Constants\nexport const constants = {\n  AUTHENTICATION_LOGIN: createSagaActions('AUTHENTICATION_LOGIN'),\n  AUTHENTICATION_LOGOUT: createSagaActions('AUTHENTICATION_LOGOUT'),\n  AUTHENTICATION_UPDATE_DETAILS: createSagaActions(\n    'AUTHENTICATION_UPDATE_DETAILS'\n  ),\n  AUTHENTICATION_REFRESH: createSagaActions('AUTHENTICATION_REFRESH')\n};\n\n// Action Creators\nexport const actions = {\n  login: ({ email, password }) => ({\n    type: constants.AUTHENTICATION_LOGIN.REQUEST,\n    email,\n    password\n  }),\n  logout: () => ({\n    type: constants.AUTHENTICATION_LOGOUT.REQUEST\n  }),\n  updateDetails: ({ name, isAdministrator }) => ({\n    type: constants.AUTHENTICATION_UPDATE_DETAILS.REQUEST,\n    name,\n    isAdministrator\n  })\n};\n\n// Reducer\nconst initialState = {\n  loggingIn: false,\n  error: null,\n  user: null\n};\n\nexport default (state = initialState, action) => {\n  switch (action.type) {\n    case constants.AUTHENTICATION_LOGIN.REQUEST:\n      return { ...state, error: null, loggingIn: true };\n\n    case constants.AUTHENTICATION_LOGIN.SUCCESS: {\n      const { user } = action;\n      return {\n        ...state,\n        user,\n        loggingIn: false\n      };\n    }\n\n    case constants.AUTHENTICATION_LOGIN.FAILURE:\n      return { ...state, error: action.message, loggingIn: false };\n\n    case constants.AUTHENTICATION_UPDATE_DETAILS.REQUEST:\n      return { ...state, error: null, loggingIn: true };\n\n    case constants.AUTHENTICATION_UPDATE_DETAILS.SUCCESS: {\n      const { user } = action;\n      return {\n        ...state,\n        user,\n        loggingIn: false\n      };\n    }\n\n    case constants.AUTHENTICATION_UPDATE_DETAILS.FAILURE:\n      return { ...state, error: action.message, loggingIn: false };\n\n    case constants.AUTHENTICATION_LOGOUT.REQUEST:\n      return { ...initialState };\n\n    case constants.AUTHENTICATION_LOGOUT.SUCCESS:\n      return { ...initialState };\n\n    case constants.AUTHENTICATION_LOGOUT.FAILURE:\n      return { ...initialState, error: 'Error Logging out' };\n\n    case constants.AUTHENTICATION_REFRESH: {\n      const { users } = action;\n      return {\n        ...state,\n        user: {\n          ...state.user,\n          ...users.find(user => user.id === state.user.id)\n        }\n      };\n    }\n\n    default:\n      return state;\n  }\n};\n","import { createSagaActions } from '../utils/saga';\n\n// Constants\nexport const constants = {\n  USERS_GET: createSagaActions('USERS_GET'),\n  USERS_REFRESH: createSagaActions('USERS_REFRESH')\n};\n\n// Action Creators\nexport const actions = {\n  getUsers: () => ({ type: constants.USERS_GET.REQUEST }),\n  refreshUsers: () => ({ type: constants.USERS_REFRESH.REQUEST })\n};\n\n// Reducer\nconst initialState = {\n  loading: false,\n  list: []\n};\n\nexport default (state = initialState, action) => {\n  switch (action.type) {\n    case constants.USERS_REFRESH.REQUEST:\n    case constants.USERS_GET.REQUEST: {\n      return { ...state, error: null, loading: true };\n    }\n\n    case constants.USERS_REFRESH.SUCCESS:\n    case constants.USERS_GET.SUCCESS: {\n      const { users } = action;\n      return {\n        ...state,\n        list: users.sort((userA, userB) => {\n          return userA.email.localeCompare(userB.email);\n        }),\n        loading: false\n      };\n    }\n\n    case constants.USERS_REFRESH.FAILURE:\n    case constants.USERS_GET.FAILURE: {\n      return {\n        ...state,\n        list: state.list,\n        error: action.message,\n        loading: false\n      };\n    }\n\n    default:\n      return state;\n  }\n};\n","import { createSagaActions } from '../utils/saga';\n\n// Constants\nexport const constants = {\n  LOCATIONS_GET: createSagaActions('LOCATIONS_GET'),\n  LOCATIONS_CREATE: createSagaActions('LOCATIONS_CREATE'),\n  LOCATIONS_RESET: createSagaActions('LOCATIONS_RESET')\n};\n\n// Action Creators\nexport const actions = {\n  getLocations: () => ({ type: constants.LOCATIONS_GET.REQUEST }),\n  resetLocations: () => ({ type: constants.LOCATIONS_RESET }),\n  createLocation: data => ({\n    type: constants.LOCATIONS_CREATE.REQUEST,\n    ...data\n  })\n};\n\n// Reducer\nconst initialState = {\n  loading: false,\n  list: []\n};\n\nexport default (state = initialState, action) => {\n  switch (action.type) {\n    case constants.LOCATIONS_GET.REQUEST: {\n      return { ...state, error: null, loading: true };\n    }\n\n    case constants.LOCATIONS_GET.SUCCESS: {\n      const { locations } = action;\n      return {\n        ...state,\n        list: locations.sort((locA, locB) => {\n          return locA.name.localeCompare(locB.name);\n        }),\n        loading: false\n      };\n    }\n\n    case constants.LOCATIONS_GET.FAILURE: {\n      return {\n        ...state,\n        list: state.list,\n        error: action.message,\n        loading: false\n      };\n    }\n\n    case constants.LOCATIONS_CREATE.REQUEST: {\n      return { ...state, error: null, loading: true };\n    }\n\n    case constants.LOCATIONS_CREATE.SUCCESS: {\n      const { location } = action;\n      return {\n        ...state,\n        list: state.list.concat(location).sort((locA, locB) => {\n          return locA.name.localeCompare(locB.name);\n        }),\n        loading: false\n      };\n    }\n\n    case constants.LOCATIONS_CREATE.FAILURE: {\n      return {\n        ...state,\n        list: state.list,\n        error: action.message,\n        loading: false\n      };\n    }\n\n    case constants.LOCATIONS_RESET: {\n      return {\n        ...state,\n        list: state.list,\n        error: null,\n        loading: false\n      };\n    }\n\n    default:\n      return state;\n  }\n};\n","import { createSagaActions } from '../utils/saga';\n\n// Constants\nexport const constants = {\n  REGISTRIES_GET: createSagaActions('REGISTRIES_GET'),\n  REGISTRIES_CREATE: createSagaActions('REGISTRIES_CREATE'),\n  REGISTRIES_RESET: createSagaActions('REGISTRIES_RESET')\n};\n\n// Action Creators\nexport const actions = {\n  getRegistries: () => ({ type: constants.REGISTRIES_GET.REQUEST }),\n  resetRegistries: () => ({ type: constants.REGISTRIES_RESET }),\n  createRegistry: data => ({\n    type: constants.REGISTRIES_CREATE.REQUEST,\n    ...data\n  })\n};\n\n// Reducer\nconst initialState = {\n  loading: false,\n  list: []\n};\n\nexport default (state = initialState, action) => {\n  switch (action.type) {\n    case constants.REGISTRIES_GET.REQUEST: {\n      return { ...state, error: null, loading: true };\n    }\n\n    case constants.REGISTRIES_GET.SUCCESS: {\n      const { registries } = action;\n      return {\n        ...state,\n        list: registries,\n        loading: false\n      };\n    }\n\n    case constants.REGISTRIES_GET.FAILURE: {\n      return {\n        ...state,\n        list: state.list,\n        error: action.message,\n        loading: false\n      };\n    }\n\n    case constants.REGISTRIES_CREATE.REQUEST: {\n      return { ...state, error: null, loading: true };\n    }\n\n    case constants.REGISTRIES_CREATE.SUCCESS: {\n      const { registries } = action;\n      return {\n        ...state,\n        list: registries,\n        loading: false\n      };\n    }\n\n    case constants.REGISTRIES_CREATE.FAILURE: {\n      return {\n        ...state,\n        list: state.list,\n        error: action.message,\n        loading: false\n      };\n    }\n\n    case constants.REGISTRIES_RESET: {\n      return {\n        ...state,\n        list: state.list,\n        error: null,\n        loading: false\n      };\n    }\n\n    default:\n      return state;\n  }\n};\n","import { createSagaActions } from '../utils/saga';\n\n// Constants\nexport const constants = {\n  TESTS_GET: createSagaActions('TESTS_GET'),\n  TESTS_LOAD: createSagaActions('TESTS_LOAD'),\n  TESTS_RESET: createSagaActions('TESTS_RESET')\n};\n\n// Action Creators\nexport const actions = {\n  getTests: () => ({ type: constants.TESTS_GET.REQUEST }),\n  resetTests: () => ({ type: constants.TESTS_RESET }),\n  loadTest: data => ({\n    type: constants.TESTS_LOAD.REQUEST,\n    ...data\n  })\n};\n\n// Reducer\nconst initialState = {\n  loading: false,\n  list: []\n};\n\nexport default (state = initialState, action) => {\n  switch (action.type) {\n    case constants.TESTS_GET.REQUEST: {\n      return { ...state, error: null, loading: true };\n    }\n\n    case constants.TESTS_GET.SUCCESS: {\n      const { tests } = action;\n      return {\n        ...state,\n        list: tests.sort((testA, testB) => {\n          return testA.dateTaken > testB.dateTaken;\n        }),\n        loading: false\n      };\n    }\n\n    case constants.TESTS_GET.FAILURE: {\n      return {\n        ...state,\n        list: state.list,\n        error: action.message,\n        loading: false\n      };\n    }\n\n    case constants.TESTS_LOAD.REQUEST: {\n      return { ...state, error: null, loading: true };\n    }\n\n    case constants.TESTS_LOAD.SUCCESS: {\n      const { test } = action;\n      return {\n        ...state,\n        list: state.list.concat(test).sort((testA, testB) => {\n          return testA.dateTaken > testB.dateTaken;\n        }),\n        loading: false\n      };\n    }\n\n    case constants.TESTS_LOAD.FAILURE: {\n      return {\n        ...state,\n        list: state.list,\n        error: action.message,\n        loading: false\n      };\n    }\n\n    case constants.TESTS_RESET: {\n      return {\n        ...state,\n        list: state.list,\n        error: null,\n        loading: false\n      };\n    }\n\n    default:\n      return state;\n  }\n};\n","import { createSagaActions } from '../utils/saga';\n\n// Constants\nexport const constants = {\n  NOTIFICATIONS_GET: createSagaActions('NOTIFICATIONS_GET'),\n  NOTIFICATIONS_REFRESH: createSagaActions('NOTIFICATIONS_REFRESH')\n};\n\n// Action Creators\nexport const actions = {\n  getNotifications: () => ({ type: constants.NOTIFICATIONS_GET.REQUEST })\n};\n\n// Reducer\nconst initialState = {\n  loading: false,\n  list: []\n};\n\nexport default (state = initialState, action) => {\n  switch (action.type) {\n    case constants.NOTIFICATIONS_GET.REQUEST: {\n      return { ...state, error: null, loading: true };\n    }\n\n    case constants.NOTIFICATIONS_GET.SUCCESS: {\n      const { notifications } = action;\n      return {\n        ...state,\n        list: notifications,\n        loading: false\n      };\n    }\n\n    case constants.NOTIFICATIONS_GET.FAILURE: {\n      return {\n        ...state,\n        list: state.list,\n        error: action.message,\n        loading: false\n      };\n    }\n\n    default:\n      return state;\n  }\n};\n","import { combineReducers } from 'redux';\nimport authentication from './authentication';\nimport users from './users';\nimport locations from './locations';\nimport registries from './registries';\nimport tests from './tests';\nimport notifications from './notifications';\n\nconst reducers = {\n  authentication,\n  locations,\n  registries,\n  users,\n  tests,\n  notifications\n};\n\nconst createRootReducer = () =>\n  combineReducers({\n    ...reducers\n  });\n\nexport default createRootReducer;\n","import axios from 'axios';\n\nexport const instance = axios.create({\n  baseURL: process.env.REACT_APP_URL_BACKEND,\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\n\nexport const google = axios.create({\n  baseURL: `${process.env.REACT_APP_CORS_PROXY}${process.env.REACT_APP_URL_GOOGLE}`,\n  headers: {\n    Accept: 'application/json',\n    'Content-Type': 'application/json'\n  }\n});\n","const setItem = (key, value) => {\n  return localStorage.setItem(key, value);\n};\n\nconst removeItem = key => {\n  return localStorage.removeItem(key);\n};\n\nconst getItem = key => {\n  return localStorage.getItem(key);\n};\n\nexport default { getItem, removeItem, setItem };\n","import localStorage from './localStorage';\n\nexport const USER_TOKEN_KEY = 'user-auth-token';\n\nexport const getUserToken = () => {\n  return localStorage.getItem(USER_TOKEN_KEY);\n};\n\nexport const removeUserToken = () => {\n  return localStorage.removeItem(USER_TOKEN_KEY);\n};\n\nexport const userTokenExists = () => {\n  return getUserToken() !== null;\n};\n\nexport const setUserToken = accessToken => {\n  return localStorage.setItem(USER_TOKEN_KEY, accessToken);\n};\n","import { instance } from './axios';\nimport { getUserToken } from '../../components/authentication/session';\n\nexport function login({ email, password }) {\n  return instance.post('/login', {\n    email,\n    password\n  });\n}\n\nexport function logout() {\n  return instance.get('/logout', {\n    headers: {\n      Authorization: `token ${getUserToken()}`\n    }\n  });\n}\n","import { instance } from './axios';\nimport { getUserToken } from '../../components/authentication/session';\n\nexport function getUsers() {\n  return instance.get('/user/', {\n    headers: {\n      Authorization: `token ${getUserToken()}`\n    }\n  });\n}\n\nexport function updateDetails({ name, isAdministrator }) {\n  return instance.patch(\n    '/user/',\n    {\n      name,\n      is_admin: isAdministrator\n    },\n    {\n      headers: {\n        Authorization: `token ${getUserToken()}`\n      }\n    }\n  );\n}\n","import { all, fork, call, put, takeLatest } from 'redux-saga/effects';\r\nimport moment from 'moment';\r\nimport { constants } from '../modules/authentication';\r\nimport * as authApi from '../api/authentication';\r\nimport * as usersApi from '../api/users';\r\nimport { setUserToken } from '../../components/authentication/session';\r\n\r\nexport function* login(action) {\r\n  try {\r\n    const { data } = yield call(authApi.login, { ...action });\r\n    setUserToken(data.token);\r\n    const user = {\r\n      ...data,\r\n      isAdministrator: data.is_admin,\r\n      creationDate: moment(data.creation_date)\r\n    };\r\n    yield put({\r\n      type: constants.AUTHENTICATION_LOGIN.SUCCESS,\r\n      user\r\n    });\r\n  } catch (e) {\r\n    yield put({\r\n      type: constants.AUTHENTICATION_LOGIN.FAILURE,\r\n      message: e.message || e\r\n    });\r\n  }\r\n}\r\n\r\nexport function* watchLogin() {\r\n  yield takeLatest(constants.AUTHENTICATION_LOGIN.REQUEST, login);\r\n}\r\n\r\nexport function* logout() {\r\n  yield call(authApi.logout);\r\n}\r\n\r\nexport function* watchLogout() {\r\n  yield takeLatest(constants.AUTHENTICATION_LOGOUT.REQUEST, logout);\r\n}\r\n\r\nexport function* updateDetails(action) {\r\n  try {\r\n    const { data } = yield call(usersApi.updateDetails, { ...action });\r\n    const user = {\r\n      ...data,\r\n      isAdministrator: data.is_admin,\r\n      creationDate: moment(data.creation_date)\r\n    };\r\n    yield put({ type: constants.AUTHENTICATION_UPDATE_DETAILS.SUCCESS, user });\r\n  } catch (e) {\r\n    yield put({\r\n      type: constants.AUTHENTICATION_UPDATE_DETAILS.FAILURE,\r\n      message: e.message || e\r\n    });\r\n  }\r\n}\r\n\r\nexport function* watchUpdateDetails() {\r\n  yield takeLatest(\r\n    constants.AUTHENTICATION_UPDATE_DETAILS.REQUEST,\r\n    updateDetails\r\n  );\r\n}\r\n\r\n/**\r\n * Export the root saga by forking all available sagas.\r\n */\r\nfunction* rootSaga() {\r\n  yield all([fork(watchLogin), fork(watchLogout), fork(watchUpdateDetails)]);\r\n}\r\n\r\nexport default rootSaga;\r\n","import { instance } from './axios';\nimport { getUserToken } from '../../components/authentication/session';\n\nexport function getLocations() {\n  return instance.get('/location/', {\n    headers: {\n      Authorization: `token ${getUserToken()}`\n    }\n  });\n}\n\nexport function createLocation({\n  id,\n  name,\n  description,\n  maximumCapacity,\n  openingTime,\n  closingTime,\n  logo,\n  latitude,\n  longitude\n}) {\n  return instance.post(\n    '/location/',\n    {\n      id,\n      name,\n      description,\n      maximum_capacity: maximumCapacity,\n      logo,\n      latitude,\n      longitude,\n      opening_time: openingTime,\n      closing_time: closingTime\n    },\n    {\n      headers: {\n        Authorization: `token ${getUserToken()}`\n      }\n    }\n  );\n}\n","import { all, fork, call, put, takeLatest } from 'redux-saga/effects';\nimport moment from 'moment';\nimport { constants } from '../modules/locations';\nimport * as api from '../api/locations';\n\nexport function* getLocations() {\n  try {\n    const { data: locations } = yield call(api.getLocations);\n    yield put({\n      type: constants.LOCATIONS_GET.SUCCESS,\n      locations: locations.map(location => {\n        return {\n          ...location,\n          currentCapacity: location.current_capacity,\n          maximumCapacity: location.maximum_capacity,\n          openingTime: moment(location.opening_time),\n          closingTime: moment(location.closing_time),\n          createdAt: moment(location.created_at),\n          createdBy: location.created_by\n        };\n      })\n    });\n  } catch (e) {\n    yield put({\n      type: constants.LOCATIONS_GET.FAILURE,\n      message: e.message || e\n    });\n  }\n}\n\nexport function* watchGetLocations() {\n  yield takeLatest(constants.LOCATIONS_GET.REQUEST, getLocations);\n}\n\nexport function* createLocation(action) {\n  try {\n    const { data } = yield call(api.createLocation, { ...action });\n    const location = {\n      ...data,\n      currentCapacity: data.current_capacity,\n      maximumCapacity: data.maximum_capacity,\n      openingTime: moment(data.opening_time),\n      closingTime: moment(data.closing_time),\n      createdAt: moment(data.created_at),\n      createdBy: data.created_by\n    };\n    yield put({ type: constants.LOCATIONS_CREATE.SUCCESS, location });\n  } catch (e) {\n    yield put({\n      type: constants.LOCATIONS_CREATE.FAILURE,\n      message: e.response.data || e.message || e\n    });\n  }\n}\n\nexport function* watchCreateLocation() {\n  yield takeLatest(constants.LOCATIONS_CREATE.REQUEST, createLocation);\n}\n\nfunction* rootSaga() {\n  const watchers = [watchGetLocations, watchCreateLocation];\n  yield all(watchers.map(fork));\n}\n\nexport default rootSaga;\n","import { instance } from './axios';\nimport { getUserToken } from '../../components/authentication/session';\n\nexport function getNotifications() {\n  return instance.get('/contagion/risk/', {\n    headers: {\n      Authorization: `token ${getUserToken()}`\n    }\n  });\n}\n","import { all, fork, call, put, takeLatest } from 'redux-saga/effects';\nimport { constants } from '../modules/notifications';\nimport * as api from '../api/notifications';\n\nexport function* getNotifications() {\n  try {\n    const { data: notifications } = yield call(api.getNotifications);\n    yield put({\n      type: constants.NOTIFICATIONS_GET.SUCCESS,\n      notifications: notifications.map(notification => {\n        return {\n          ...notification\n        };\n      })\n    });\n  } catch (e) {\n    yield put({\n      type: constants.NOTIFICATIONS_GET.FAILURE,\n      message: e.message || e\n    });\n  }\n}\n\nexport function* watchGetNotifications() {\n  yield takeLatest(constants.NOTIFICATIONS_GET.REQUEST, getNotifications);\n}\n\nfunction* rootSaga() {\n  const watchers = [watchGetNotifications];\n  yield all(watchers.map(fork));\n}\n\nexport default rootSaga;\n","import { instance } from './axios';\nimport { getUserToken } from '../../components/authentication/session';\n\nexport function getRegistries() {\n  return instance.get('/registry/', {\n    headers: {\n      Authorization: `token ${getUserToken()}`\n    }\n  });\n}\n\nexport function createRegistry({ locationId }) {\n  return instance.post(\n    '/registry/',\n    {\n      included_in: locationId\n    },\n    {\n      headers: {\n        Authorization: `token ${getUserToken()}`\n      }\n    }\n  );\n}\n","import { all, fork, call, put, takeLatest } from 'redux-saga/effects';\nimport moment from 'moment';\nimport { constants } from '../modules/registries';\nimport * as api from '../api/registries';\n\nexport function* getRegistries() {\n  try {\n    const { data: registries } = yield call(api.getRegistries);\n    yield put({\n      type: constants.REGISTRIES_GET.SUCCESS,\n      registries: registries.map(registry => {\n        return {\n          ...registry,\n          customerName: registry.registered_by_name,\n          locationName: registry.included_in_name,\n          entranceTime: moment(registry.entrance_time),\n          exitTime: moment(registry.exit_time)\n        };\n      })\n    });\n  } catch (e) {\n    yield put({\n      type: constants.REGISTRIES_GET.FAILURE,\n      message: e.message || e\n    });\n  }\n}\n\nexport function* watchGetRegistries() {\n  yield takeLatest(constants.REGISTRIES_GET.REQUEST, getRegistries);\n}\n\nexport function* createRegistry(action) {\n  try {\n    yield call(api.createRegistry, { ...action });\n    const { data: registries } = yield call(api.getRegistries);\n    yield put({\n      type: constants.REGISTRIES_CREATE.SUCCESS,\n      registries: registries.map(registry => {\n        return {\n          ...registry,\n          customerName: registry.registered_by_name,\n          locationName: registry.included_in_name,\n          entranceTime: moment(registry.entrance_time),\n          exitTime: moment(registry.exit_time)\n        };\n      })\n    });\n  } catch (e) {\n    yield put({\n      type: constants.REGISTRIES_CREATE.FAILURE,\n      message: e.response.data || e.message || e\n    });\n  }\n}\n\nexport function* watchCreateRegistry() {\n  yield takeLatest(constants.REGISTRIES_CREATE.REQUEST, createRegistry);\n}\n\nfunction* rootSaga() {\n  const watchers = [watchGetRegistries, watchCreateRegistry];\n  yield all(watchers.map(fork));\n}\n\nexport default rootSaga;\n","import { all, fork, call, put, takeLatest } from 'redux-saga/effects';\nimport moment from 'moment';\nimport { constants as userConstants } from '../modules/users';\nimport { constants as authConstants } from '../modules/authentication';\nimport * as api from '../api/users';\n\nexport function* getUsers() {\n  try {\n    const { data: users } = yield call(api.getUsers);\n    yield put({\n      type: userConstants.USERS_GET.SUCCESS,\n      users: users.map(user => {\n        return {\n          ...user,\n          isAdministrator: user.is_admin,\n          createdAt: moment(user.creation_date)\n        };\n      })\n    });\n  } catch (e) {\n    yield put({\n      type: userConstants.USERS_GET.FAILURE,\n      message: e.message || e\n    });\n  }\n}\n\nexport function* refreshUsers() {\n  try {\n    const { data: users } = yield call(api.getUsers);\n    yield put({\n      type: userConstants.USERS_REFRESH.SUCCESS,\n      users: users.map(user => {\n        return {\n          ...user,\n          isAdministrator: user.is_admin,\n          createdAt: moment(user.creation_date)\n        };\n      })\n    });\n    yield put({\n      type: authConstants.AUTHENTICATION_REFRESH,\n      users\n    });\n  } catch (e) {\n    yield put({\n      type: userConstants.USERS_REFRESH.FAILURE,\n      message: e.message || e\n    });\n  }\n}\n\nexport function* watchGetUsers() {\n  yield takeLatest(userConstants.USERS_GET.REQUEST, getUsers);\n}\n\nexport function* watchRefreshUsers() {\n  yield takeLatest(userConstants.USERS_REFRESH.REQUEST, refreshUsers);\n}\n\nfunction* rootSaga() {\n  const watchers = [watchGetUsers, watchRefreshUsers];\n  yield all(watchers.map(fork));\n}\n\nexport default rootSaga;\n","import { instance } from './axios';\nimport { getUserToken } from '../../components/authentication/session';\n\nexport function getTests() {\n  return instance.get('/test/', {\n    headers: {\n      Authorization: `token ${getUserToken()}`\n    }\n  });\n}\n\nexport function loadTest({ dateTaken, isPositive }) {\n  return instance.post(\n    '/test/',\n    {\n      date_taken: dateTaken,\n      is_positive: isPositive\n    },\n    {\n      headers: {\n        Authorization: `token ${getUserToken()}`\n      }\n    }\n  );\n}\n","import { all, fork, call, put, takeLatest } from 'redux-saga/effects';\nimport moment from 'moment';\nimport { constants } from '../modules/tests';\nimport * as api from '../api/tests';\n\nexport function* getTests() {\n  try {\n    const { data: tests } = yield call(api.getTests);\n    yield put({\n      type: constants.TESTS_GET.SUCCESS,\n      tests: tests.map(test => {\n        return {\n          ...test,\n          dateTaken: moment(test.date_taken),\n          isPositive: test.is_positive,\n          takenBy: test.taken_by_name\n        };\n      })\n    });\n  } catch (e) {\n    yield put({\n      type: constants.TESTS_GET.FAILURE,\n      message: e.message || e\n    });\n  }\n}\n\nexport function* watchGetTests() {\n  yield takeLatest(constants.TESTS_GET.REQUEST, getTests);\n}\n\nexport function* loadTest(action) {\n  try {\n    const { data } = yield call(api.loadTest, { ...action });\n    const test = {\n      ...data,\n      dateTaken: moment(data.date_taken),\n      isPositive: data.is_positive,\n      takenBy: data.taken_by_name\n    };\n    yield put({ type: constants.TESTS_LOAD.SUCCESS, test });\n  } catch (e) {\n    yield put({\n      type: constants.TESTS_LOAD.FAILURE,\n      message:\n        typeof e.response.data === 'string'\n          ? e.response.data\n          : e.request.response || e.message || e\n    });\n  }\n}\n\nexport function* watchLoadTest() {\n  yield takeLatest(constants.TESTS_LOAD.REQUEST, loadTest);\n}\n\nfunction* rootSaga() {\n  const watchers = [watchGetTests, watchLoadTest];\n  yield all(watchers.map(fork));\n}\n\nexport default rootSaga;\n","import { all, fork } from 'redux-saga/effects';\nimport authentication from './authentication';\nimport locations from './locations';\nimport notifications from './notifications';\nimport registries from './registries';\nimport users from './users';\nimport tests from './tests';\n\nfunction* rootSaga() {\n  const sagas = [\n    authentication,\n    locations,\n    notifications,\n    registries,\n    users,\n    tests\n  ].map(fork);\n  yield all(sagas);\n}\n\nexport default rootSaga;\n","import { createStore, applyMiddleware, compose } from 'redux';\nimport createSagaMiddleware from 'redux-saga';\n\nimport createRootReducer from './modules';\nimport rootSaga from './sagas';\n\nconst composeEnhancers =\n  (window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ &&\n    window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({\n      trace: true,\n      traceLimit: 1000\n    })) ||\n  compose;\nconst sagaMiddleware = createSagaMiddleware();\n\nconst store = createStore(\n  createRootReducer(),\n  composeEnhancers(applyMiddleware(sagaMiddleware))\n);\n\nsagaMiddleware.run(rootSaga);\n\nexport default store;\n","/* eslint-disable */\n// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n  // [::1] is the IPv6 localhost address.\n  window.location.hostname === '[::1]' ||\n  // 127.0.0.1/8 is considered localhost for IPv4.\n  window.location.hostname.match(\n    /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n  )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n            'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { createStyles, makeStyles } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles(() =>\r\n  createStyles({\r\n    '@global': {\r\n      '*': {\r\n        boxSizing: 'border-box',\r\n        margin: 0,\r\n        padding: 0\r\n      },\r\n      html: {\r\n        '-webkit-font-smoothing': 'antialiased',\r\n        '-moz-osx-font-smoothing': 'grayscale',\r\n        height: '100%',\r\n        width: '100%'\r\n      },\r\n      body: {\r\n        backgroundColor: '#f4f6f8',\r\n        height: '100%',\r\n        width: '100%'\r\n      },\r\n      a: {\r\n        textDecoration: 'none'\r\n      },\r\n      '#root': {\r\n        height: '100%',\r\n        width: '100%'\r\n      }\r\n    }\r\n  })\r\n);\r\n\r\nconst GlobalStyles = () => {\r\n  useStyles();\r\n  return null;\r\n};\r\n\r\nexport default GlobalStyles;\r\n","import { Chart } from 'react-chartjs-2';\n\n// ChartJS extension rounded bar chart\n// https://codepen.io/jedtrow/full/ygRYgo\nfunction draw() {\n  const { ctx } = this._chart;\n  const vm = this._view;\n  let { borderWidth } = vm;\n\n  let left;\n  let right;\n  let top;\n  let bottom;\n  let signX;\n  let signY;\n  let borderSkipped;\n  let radius;\n\n  // If radius is less than 0 or is large enough to cause drawing errors a max\n  //      radius is imposed. If cornerRadius is not defined set it to 0.\n  let { cornerRadius } = this._chart.config.options;\n  if (cornerRadius < 0) {\n    cornerRadius = 0;\n  }\n\n  if (typeof cornerRadius === 'undefined') {\n    cornerRadius = 0;\n  }\n\n  if (!vm.horizontal) {\n    // bar\n    left = vm.x - vm.width / 2;\n    right = vm.x + vm.width / 2;\n    top = vm.y;\n    bottom = vm.base;\n    signX = 1;\n    signY = bottom > top ? 1 : -1;\n    borderSkipped = vm.borderSkipped || 'bottom';\n  } else {\n    // horizontal bar\n    left = vm.base;\n    right = vm.x;\n    top = vm.y - vm.height / 2;\n    bottom = vm.y + vm.height / 2;\n    signX = right > left ? 1 : -1;\n    signY = 1;\n    borderSkipped = vm.borderSkipped || 'left';\n  }\n\n  // Canvas doesn't allow us to stroke inside the width so we can\n  // adjust the sizes to fit if we're setting a stroke on the line\n  if (borderWidth) {\n    // borderWidth shold be less than bar width and bar height.\n    const barSize = Math.min(Math.abs(left - right), Math.abs(top - bottom));\n    borderWidth = borderWidth > barSize ? barSize : borderWidth;\n    const halfStroke = borderWidth / 2;\n    // Adjust borderWidth when bar top position is near vm.base(zero).\n    const borderLeft = left + (borderSkipped !== 'left' ? halfStroke * signX : 0);\n    const borderRight = right + (borderSkipped !== 'right' ? -halfStroke * signX : 0);\n    const borderTop = top + (borderSkipped !== 'top' ? halfStroke * signY : 0);\n    const borderBottom = bottom + (borderSkipped !== 'bottom' ? -halfStroke * signY : 0);\n    // not become a vertical line?\n    if (borderLeft !== borderRight) {\n      top = borderTop;\n      bottom = borderBottom;\n    }\n    // not become a horizontal line?\n    if (borderTop !== borderBottom) {\n      left = borderLeft;\n      right = borderRight;\n    }\n  }\n\n  ctx.beginPath();\n  ctx.fillStyle = vm.backgroundColor;\n  ctx.strokeStyle = vm.borderColor;\n  ctx.lineWidth = borderWidth;\n\n  // Corner points, from bottom-left to bottom-right clockwise\n  // | 1 2 |\n  // | 0 3 |\n  const corners = [[left, bottom], [left, top], [right, top], [right, bottom]];\n\n  // Find first (starting) corner with fallback to 'bottom'\n  const borders = ['bottom', 'left', 'top', 'right'];\n  let startCorner = borders.indexOf(borderSkipped, 0);\n  if (startCorner === -1) {\n    startCorner = 0;\n  }\n\n  function cornerAt(index) {\n    return corners[(startCorner + index) % 4];\n  }\n\n  // Draw rectangle from 'startCorner'\n  let corner = cornerAt(0);\n  ctx.moveTo(corner[0], corner[1]);\n\n  for (let i = 1; i < 4; i += 1) {\n    corner = cornerAt(i);\n    let nextCornerId = i + 1;\n    if (nextCornerId === 4) {\n      nextCornerId = 0;\n    }\n\n    const width = corners[2][0] - corners[1][0];\n    const height = corners[0][1] - corners[1][1];\n    const x = corners[1][0];\n    const y = corners[1][1];\n\n    radius = cornerRadius;\n    // Fix radius being too large\n    if (radius > Math.abs(height) / 2) {\n      radius = Math.floor(Math.abs(height) / 2);\n    }\n    if (radius > Math.abs(width) / 2) {\n      radius = Math.floor(Math.abs(width) / 2);\n    }\n\n    if (height < 0) {\n      // Negative values in a standard bar chart\n      const xTl = x;\n      const xTr = x + width;\n      const yTl = y + height;\n      const yTr = y + height;\n\n      const xBl = x;\n      const xBr = x + width;\n      const yBl = y;\n      const yBr = y;\n\n      // Draw\n      ctx.moveTo(xBl + radius, yBl);\n      ctx.lineTo(xBr - radius, yBr);\n      ctx.quadraticCurveTo(xBr, yBr, xBr, yBr - radius);\n      ctx.lineTo(xTr, yTr + radius);\n      ctx.quadraticCurveTo(xTr, yTr, xTr - radius, yTr);\n      ctx.lineTo(xTl + radius, yTl);\n      ctx.quadraticCurveTo(xTl, yTl, xTl, yTl + radius);\n      ctx.lineTo(xBl, yBl - radius);\n      ctx.quadraticCurveTo(xBl, yBl, xBl + radius, yBl);\n    } else if (width < 0) {\n      // Negative values in a horizontal bar chart\n      const xTl = x + width;\n      const xTr = x;\n      const yTl = y;\n      const yTr = y;\n\n      const xBl = x + width;\n      const xBr = x;\n      const yBl = y + height;\n      const yBr = y + height;\n\n      // Draw\n      ctx.moveTo(xBl + radius, yBl);\n      ctx.lineTo(xBr - radius, yBr);\n      ctx.quadraticCurveTo(xBr, yBr, xBr, yBr - radius);\n      ctx.lineTo(xTr, yTr + radius);\n      ctx.quadraticCurveTo(xTr, yTr, xTr - radius, yTr);\n      ctx.lineTo(xTl + radius, yTl);\n      ctx.quadraticCurveTo(xTl, yTl, xTl, yTl + radius);\n      ctx.lineTo(xBl, yBl - radius);\n      ctx.quadraticCurveTo(xBl, yBl, xBl + radius, yBl);\n    } else {\n      // Positive Value\n      ctx.moveTo(x + radius, y);\n      ctx.lineTo(x + width - radius, y);\n      ctx.quadraticCurveTo(x + width, y, x + width, y + radius);\n      ctx.lineTo(x + width, y + height - radius);\n      ctx.quadraticCurveTo(\n        x + width,\n        y + height,\n        x + width - radius,\n        y + height\n      );\n      ctx.lineTo(x + radius, y + height);\n      ctx.quadraticCurveTo(x, y + height, x, y + height - radius);\n      ctx.lineTo(x, y + radius);\n      ctx.quadraticCurveTo(x, y, x + radius, y);\n    }\n  }\n\n  ctx.fill();\n  if (borderWidth) {\n    ctx.stroke();\n  }\n}\n\nChart.helpers.extend(Chart.elements.Rectangle.prototype, {\n  draw\n});\n","import { createMuiTheme, colors } from '@material-ui/core';\nimport shadows from './shadows';\nimport typography from './typography';\n\nconst theme = createMuiTheme({\n  palette: {\n    background: {\n      dark: '#F4F6F8',\n      default: colors.common.white,\n      paper: colors.common.white\n    },\n    primary: {\n      main: colors.orange[300]\n    },\n    secondary: {\n      main: colors.yellow[200]\n    },\n    text: {\n      primary: colors.grey[900],\n      secondary: colors.blueGrey[600]\n    }\n  },\n  shadows,\n  typography\n});\n\nexport default theme;\n","export default [\n  'none',\n  '0 0 0 1px rgba(63,63,68,0.05), 0 1px 2px 0 rgba(63,63,68,0.15)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 2px 2px -2px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 3px 4px -2px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 3px 4px -2px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 4px 6px -2px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 4px 6px -2px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 4px 8px -2px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 5px 8px -2px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 6px 12px -4px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 7px 12px -4px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 6px 16px -4px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 7px 16px -4px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 8px 18px -8px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 9px 18px -8px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 10px 20px -8px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 11px 20px -8px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 12px 22px -8px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 13px 22px -8px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 14px 24px -8px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 16px 28px -8px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 18px 30px -8px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 20px 32px -8px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 22px 34px -8px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 24px 36px -8px rgba(0,0,0,0.25)'\n];\n","export default {\n  h1: {\n    fontWeight: 500,\n    fontSize: 35,\n    letterSpacing: '-0.24px'\n  },\n  h2: {\n    fontWeight: 500,\n    fontSize: 29,\n    letterSpacing: '-0.24px'\n  },\n  h3: {\n    fontWeight: 500,\n    fontSize: 24,\n    letterSpacing: '-0.06px'\n  },\n  h4: {\n    fontWeight: 500,\n    fontSize: 20,\n    letterSpacing: '-0.06px'\n  },\n  h5: {\n    fontWeight: 500,\n    fontSize: 16,\n    letterSpacing: '-0.05px'\n  },\n  h6: {\n    fontWeight: 500,\n    fontSize: 14,\n    letterSpacing: '-0.05px'\n  },\n  overline: {\n    fontWeight: 500\n  }\n};\n","import React from 'react';\nimport { NavLink as RouterLink } from 'react-router-dom';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport {\n  Button,\n  ListItem,\n  makeStyles\n} from '@material-ui/core';\n\nconst useStyles = makeStyles((theme) => ({\n  item: {\n    display: 'flex',\n    paddingTop: 0,\n    paddingBottom: 0\n  },\n  button: {\n    color: theme.palette.text.secondary,\n    fontWeight: theme.typography.fontWeightMedium,\n    justifyContent: 'flex-start',\n    letterSpacing: 0,\n    padding: '10px 8px',\n    textTransform: 'none',\n    width: '100%'\n  },\n  icon: {\n    marginRight: theme.spacing(1)\n  },\n  title: {\n    marginRight: 'auto'\n  },\n  active: {\n    color: theme.palette.primary.main,\n    '& $title': {\n      fontWeight: theme.typography.fontWeightMedium\n    },\n    '& $icon': {\n      color: theme.palette.primary.main\n    }\n  }\n}));\n\nconst NavItem = ({\n  className,\n  href,\n  icon: Icon,\n  title,\n  ...rest\n}) => {\n  const classes = useStyles();\n\n  return (\n    <ListItem\n      className={clsx(classes.item, className)}\n      disableGutters\n      {...rest}\n    >\n      <Button\n        activeClassName={classes.active}\n        className={classes.button}\n        component={RouterLink}\n        to={href}\n      >\n        {Icon && (\n          <Icon\n            className={classes.icon}\n            size=\"20\"\n          />\n        )}\n        <span className={classes.title}>\n          {title}\n        </span>\n      </Button>\n    </ListItem>\n  );\n};\n\nNavItem.propTypes = {\n  className: PropTypes.string,\n  href: PropTypes.string,\n  icon: PropTypes.elementType,\n  title: PropTypes.string\n};\n\nexport default NavItem;\n","import React, { useEffect } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport {\n  Box,\n  Divider,\n  Drawer,\n  Hidden,\n  List,\n  Typography,\n  makeStyles\n} from '@material-ui/core';\nimport {\n  BarChart as BarChartIcon,\n  Bell as BellIcon,\n  Settings as SettingsIcon,\n  Users as UsersIcon\n} from 'react-feather';\nimport StorefrontIcon from '@material-ui/icons/Storefront';\nimport DirectionsWalk from '@material-ui/icons/DirectionsWalk';\nimport LocalHospitalIcon from '@material-ui/icons/LocalHospital';\nimport Avatar from 'avataaars';\nimport NavItem from './NavItem';\n\nconst items = [\n  {\n    href: '/app/dashboard',\n    icon: BarChartIcon,\n    title: 'Dashboard',\n    requiresAdminPrivilege: true\n  },\n  {\n    href: '/app/users',\n    icon: UsersIcon,\n    title: 'Users',\n    requiresAdminPrivilege: true\n  },\n  {\n    href: '/app/notifications',\n    icon: BellIcon,\n    title: 'Notifications'\n  },\n  {\n    href: '/app/locations',\n    icon: StorefrontIcon,\n    title: 'Locations'\n  },\n  {\n    href: '/app/registry',\n    icon: DirectionsWalk,\n    title: 'Registry'\n  },\n  {\n    href: '/app/tests',\n    icon: LocalHospitalIcon,\n    title: 'Tests'\n  },\n  {\n    href: '/app/settings',\n    icon: SettingsIcon,\n    title: 'Settings'\n  }\n];\n\nconst useStyles = makeStyles(theme => ({\n  mobileDrawer: {\n    width: 256\n  },\n  desktopDrawer: {\n    width: 256,\n    top: 64,\n    height: 'calc(100% - 64px)'\n  },\n  avatar: {\n    width: 64,\n    height: 64\n  },\n  healthStatus: {\n    marginTop: '5px',\n    padding: '5px',\n    backgroundColor: theme.palette.primary.light\n  }\n}));\n\nconst avatar = user => {\n  return {\n    accessoriesType:\n      user.status !== 'Healthy'\n        ? null\n        : user.isAdministrator\n        ? 'Wayfarers'\n        : null,\n    eyeType:\n      user.status === 'COVID Positive'\n        ? 'Dizzy'\n        : user.status === 'Contagion Risk'\n        ? 'Surprised'\n        : 'Default',\n    mouthType:\n      user.status === 'COVID Positive'\n        ? 'Vomit'\n        : user.status === 'Contagion Risk'\n        ? 'Concerned'\n        : 'Smile'\n  };\n};\n\nconst NavBar = props => {\n  const classes = useStyles();\n  const { onMobileClose, openMobile, user } = props;\n  const location = useLocation();\n\n  useEffect(() => {\n    if (openMobile && onMobileClose) {\n      onMobileClose();\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [location.pathname]);\n\n  const content = (\n    <Box height=\"100%\" display=\"flex\" flexDirection=\"column\">\n      <Box alignItems=\"center\" display=\"flex\" flexDirection=\"column\" p={2}>\n        <Avatar\n          style={{ width: '70px', height: '70px' }}\n          avatarStyle=\"Transparent\"\n          topType=\"ShortHairShortCurly\"\n          accessoriesType={avatar(user).accessoriesType}\n          hairColor=\"BrownDark\"\n          clotheType=\"ShirtVNeck\"\n          clotheColor=\"Black\"\n          eyeType={avatar(user).eyeType}\n          eyebrowType=\"Default\"\n          mouthType={avatar(user).mouthType}\n          skinColor=\"Light\"\n        />\n        <Typography className={classes.name} color=\"textPrimary\" variant=\"h5\">\n          {user.name}\n        </Typography>\n        <Typography color=\"textSecondary\" variant=\"body2\">\n          {user.email}\n        </Typography>\n        <Typography\n          color=\"textSecondary\"\n          variant=\"body2\"\n          className={classes.healthStatus}\n        >\n          {user.status}\n        </Typography>\n      </Box>\n      <Divider />\n      <Box p={2}>\n        <List>\n          {items\n            .filter(\n              item =>\n                !item.requiresAdminPrivilege ||\n                item.requiresAdminPrivilege === user.isAdministrator\n            )\n            .map(item => (\n              <NavItem\n                href={item.href}\n                key={item.title}\n                title={item.title}\n                icon={item.icon}\n              />\n            ))}\n        </List>\n      </Box>\n    </Box>\n  );\n\n  return (\n    <>\n      <Hidden mdUp>\n        <Drawer\n          anchor=\"left\"\n          classes={{ paper: classes.mobileDrawer }}\n          onClose={onMobileClose}\n          open={openMobile}\n          variant=\"temporary\"\n        >\n          {content}\n        </Drawer>\n      </Hidden>\n      <Hidden smDown>\n        <Drawer\n          anchor=\"left\"\n          classes={{ paper: classes.desktopDrawer }}\n          open\n          variant=\"persistent\"\n        >\n          {content}\n        </Drawer>\n      </Hidden>\n    </>\n  );\n};\n\nNavBar.propTypes = {\n  onMobileClose: PropTypes.func,\n  openMobile: PropTypes.bool,\n  user: PropTypes.shape({\n    name: PropTypes.string,\n    status: PropTypes.string,\n    email: PropTypes.string,\n    isAdministrator: PropTypes.bool\n  })\n};\n\nNavBar.defaultProps = {\n  openMobile: false\n};\n\nexport default NavBar;\n","import React from 'react';\r\n\r\nconst Logo = props => {\r\n  return (\r\n    <div>\r\n      <img title=\"#YoEstuveAhí\" alt=\"Logo\" src=\"/static/logo.svg\" {...props} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Logo;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Modal from '@material-ui/core/Modal';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport { Typography } from '@material-ui/core';\r\n\r\nfunction getModalStyle() {\r\n  const top = 50;\r\n  const left = 50;\r\n\r\n  return {\r\n    top: `${top}%`,\r\n    left: `${left}%`,\r\n    transform: `translate(-${top}%, -${left}%)`\r\n  };\r\n}\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  action: {\r\n    display: 'flex',\r\n    flexDirection: 'row',\r\n    alignItems: 'center',\r\n    justifyContent: 'space-between',\r\n    padding: '20px',\r\n    backgroundColor: theme.palette.primary.light\r\n  },\r\n  title: {\r\n    lineHeight: '1.33',\r\n    fontSize: '24px',\r\n    letterSpacing: '0.95px'\r\n  },\r\n  container: {\r\n    width: '500px',\r\n    maxWidth: '85%',\r\n    position: 'absolute',\r\n    outline: 0,\r\n    backgroundColor: 'white'\r\n  }\r\n}));\r\n\r\nconst SimpleModal = props => {\r\n  const { children, onClose, open, title } = props;\r\n  const classes = useStyles();\r\n\r\n  const [modalStyle] = useState(getModalStyle);\r\n  const [isOpen, setIsOpen] = useState(open);\r\n\r\n  useEffect(() => {\r\n    setIsOpen(open);\r\n  }, [open]);\r\n\r\n  const handleClose = () => {\r\n    setIsOpen(false);\r\n    onClose();\r\n  };\r\n\r\n  return (\r\n    <Modal\r\n      open={isOpen}\r\n      onClose={handleClose}\r\n      aria-labelledby=\"simple-modal-title\"\r\n      aria-describedby=\"simple-modal-description\"\r\n    >\r\n      <div style={modalStyle} className={classes.container}>\r\n        <>\r\n          {title && (\r\n            <div className={classes.action}>\r\n              <Typography\r\n                className={classes.title}\r\n                color=\"textPrimary\"\r\n                variant=\"h3\"\r\n              >\r\n                {title}\r\n              </Typography>\r\n              <IconButton color=\"inherit\" onClick={handleClose}>\r\n                <CloseIcon />\r\n              </IconButton>\r\n            </div>\r\n          )}\r\n          {children}\r\n        </>\r\n      </div>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default SimpleModal;\r\n","import React, { useEffect, useState } from 'react';\nimport moment from 'moment';\nimport { makeStyles } from '@material-ui/core/styles';\nimport {\n  Box,\n  Button,\n  Card,\n  CardContent,\n  Divider,\n  Switch\n} from '@material-ui/core';\nimport DateFnsUtils from '@date-io/date-fns';\nimport {\n  MuiPickersUtilsProvider,\n  KeyboardDatePicker\n} from '@material-ui/pickers';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport Alert from '@material-ui/lab/Alert';\nimport AlertTitle from '@material-ui/lab/AlertTitle';\nimport SimpleModal from '../SimpleModal';\nimport { actions as testActions } from '../../redux/modules/tests';\nimport { actions as userActions } from '../../redux/modules/users';\n\nconst useStyles = makeStyles(theme => ({\n  container: {\n    backgroundColor: theme.palette.primary.light\n  },\n  body: {\n    width: '100%',\n    alignItems: 'center',\n    '&>div': {\n      marginBottom: '15px'\n    }\n  }\n}));\n\nconst LoadTestModal = ({\n  onClose,\n  open,\n  loadTest,\n  resetTests,\n  refreshUsers,\n  error,\n  tests,\n  loading\n}) => {\n  const classes = useStyles();\n  const [selectedDate, setSelectedDate] = useState(moment().toISOString());\n  const [isPositive, setIsPositive] = useState(false);\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    loadTest({\n      dateTaken: selectedDate,\n      isPositive\n    });\n  };\n\n  const handleClose = () => {\n    resetTests();\n    refreshUsers();\n    onClose();\n  };\n\n  useEffect(() => {\n    if (!error && !loading) {\n      handleClose();\n    }\n  }, [error, loading, tests]);\n\n  return (\n    <SimpleModal title=\"Load Test Result\" open={open} onClose={onClose}>\n      <div className={classes.container}>\n        <form onSubmit={handleSubmit}>\n          <Card>\n            <CardContent>\n              <FormControl component=\"fieldset\" className={classes.body}>\n                <FormGroup aria-label=\"position\" row>\n                  <FormControlLabel\n                    value=\"start\"\n                    control={\n                      <Typography component=\"div\">\n                        <Grid\n                          component=\"label\"\n                          container\n                          alignItems=\"center\"\n                          spacing={1}\n                        >\n                          <Grid item>Negative</Grid>\n                          <Grid item>\n                            <Switch\n                              color=\"primary\"\n                              checked={isPositive}\n                              onChange={() => setIsPositive(!isPositive)}\n                            />\n                          </Grid>\n                          <Grid item>Positive</Grid>\n                        </Grid>\n                      </Typography>\n                    }\n                    label=\"Test Result\"\n                    labelPlacement=\"top\"\n                  />\n                </FormGroup>\n                <FormGroup aria-label=\"position\" row>\n                  <MuiPickersUtilsProvider utils={DateFnsUtils}>\n                    <KeyboardDatePicker\n                      margin=\"normal\"\n                      id=\"date-picker-dialog\"\n                      label=\"Test Taken On\"\n                      format=\"dd/MM/yyyy\"\n                      value={selectedDate}\n                      onChange={setSelectedDate}\n                      disableFuture\n                      KeyboardButtonProps={{\n                        'aria-label': 'change date'\n                      }}\n                    />\n                  </MuiPickersUtilsProvider>\n                </FormGroup>\n              </FormControl>\n            </CardContent>\n            <Divider />\n            {error && (\n              <>\n                <Box\n                  p={2}\n                  alignItems=\"center\"\n                  display=\"flex\"\n                  flexDirection=\"column\"\n                >\n                  <Alert className={classes.fullWidth} severity=\"error\">\n                    <AlertTitle>Error</AlertTitle>\n                    {error}\n                  </Alert>\n                </Box>\n                <Divider />\n              </>\n            )}\n            <Box\n              p={2}\n              display=\"flex\"\n              flexDirection=\"row\"\n              justifyContent=\"space-around\"\n            >\n              <Button color=\"secondary\" variant=\"contained\" onClick={onClose}>\n                Cancel\n              </Button>\n              <Button color=\"primary\" variant=\"contained\" type=\"submit\">\n                Load\n              </Button>\n            </Box>\n          </Card>\n        </form>\n      </div>\n    </SimpleModal>\n  );\n};\n\nconst mapStateToProps = state => ({\n  tests: state.tests.list,\n  loading: state.tests.loading,\n  error: state.tests.error\n});\n\nconst mapDispatchToProps = dispatch => ({\n  loadTest: data => dispatch(testActions.loadTest(data)),\n  resetTests: () => dispatch(testActions.resetTests()),\n  refreshUsers: () => dispatch(userActions.refreshUsers())\n});\n\nLoadTestModal.propTypes = {\n  loadTest: PropTypes.func.isRequired,\n  resetTests: PropTypes.func.isRequired,\n  refreshUsers: PropTypes.func.isRequired,\n  tests: PropTypes.array,\n  onClose: PropTypes.func.isRequired,\n  loading: PropTypes.bool,\n  open: PropTypes.bool,\n  error: PropTypes.string\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(LoadTestModal);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport {\n  Avatar,\n  Box,\n  Card,\n  CardContent,\n  Divider,\n  Grid,\n  Typography,\n  makeStyles\n} from '@material-ui/core';\nimport AccessTimeIcon from '@material-ui/icons/AccessTime';\nimport PeopleIcon from '@material-ui/icons/People';\nimport moment from 'moment';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: 'flex',\n    flexDirection: 'column'\n  },\n  statsItem: {\n    alignItems: 'center',\n    display: 'flex'\n  },\n  statsIcon: {\n    marginRight: theme.spacing(1)\n  },\n  large: {\n    width: theme.spacing(8),\n    height: theme.spacing(8)\n  }\n}));\n\nconst LocationCard = ({ className, location, ...rest }) => {\n  const classes = useStyles();\n\n  return (\n    <Card className={clsx(classes.root, className)} {...rest}>\n      <CardContent>\n        <Box display=\"flex\" justifyContent=\"center\" mb={2}>\n          <Avatar\n            alt=\"Product\"\n            src={location.logo}\n            className={classes.large}\n            variant=\"circle\"\n          />\n        </Box>\n        <Typography\n          align=\"center\"\n          color=\"textPrimary\"\n          gutterBottom\n          variant=\"h4\"\n        >\n          {location.name}\n        </Typography>\n        <Typography align=\"center\" color=\"textPrimary\" variant=\"body1\">\n          {location.description}\n        </Typography>\n      </CardContent>\n      <Box flexGrow={1} />\n      <Divider />\n      <Box p={1}>\n        <Grid container justify=\"center\" spacing={2}>\n          <Grid className={classes.statsItem} item>\n            <AccessTimeIcon className={classes.statsIcon} color=\"action\" />\n            <Typography color=\"textSecondary\" display=\"inline\" variant=\"body2\">\n              {`Last update at ${moment(location.createdAt).format(\n                'MMMM D, YYYY HH:mm'\n              )}`}\n            </Typography>\n          </Grid>\n          <Grid className={classes.statsItem} item>\n            <PeopleIcon className={classes.statsIcon} color=\"action\" />\n            <Typography color=\"textSecondary\" display=\"inline\" variant=\"body2\">\n              {location.maximumCapacity} people allowed inside\n            </Typography>\n          </Grid>\n        </Grid>\n      </Box>\n    </Card>\n  );\n};\n\nLocationCard.propTypes = {\n  className: PropTypes.string,\n  location: PropTypes.object.isRequired\n};\n\nexport default LocationCard;\n","import React, { useEffect, useState } from 'react';\nimport { Box, Button, Card, CardContent, makeStyles } from '@material-ui/core';\nimport QrReader from 'react-qr-scanner';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport LocationCard from '../../views/location/LocationListView/LocationCard';\nimport SimpleModal from '../SimpleModal';\nimport { actions as locationActions } from '../../redux/modules/locations';\nimport { actions as registryActions } from '../../redux/modules/registries';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    backgroundColor: theme.palette.background.dark,\n    minHeight: '100%',\n    paddingBottom: theme.spacing(3),\n    paddingTop: theme.spacing(3)\n  },\n  scanAgain: {\n    marginRight: theme.spacing(1)\n  },\n  container: {\n    padding: '20px'\n  }\n}));\n\nconst ScanQRCodeModal = ({\n  onClose,\n  open,\n  createRegistry,\n  resetRegistries,\n  error,\n  getLocations,\n  locations,\n  registries,\n  loading\n}) => {\n  const classes = useStyles();\n\n  const [delay] = useState(100);\n  const [QRData, setQRData] = useState(null);\n\n  const handleScan = data => {\n    if (data) {\n      setQRData(locations.find(location => location.id === parseInt(data, 10)));\n    }\n  };\n\n  const handleClose = () => {\n    setQRData(null);\n    resetRegistries();\n    getLocations();\n    onClose();\n  };\n\n  useEffect(() => {\n    getLocations();\n  }, [getLocations]);\n\n  const handleCreate = () => {\n    createRegistry({\n      locationId: QRData.id\n    });\n  };\n\n  useEffect(() => {\n    if (!error && !loading) {\n      handleClose();\n    }\n  }, [error, loading, registries]);\n\n  return (\n    <SimpleModal title=\"Scan a QR code\" open={open} onClose={handleClose}>\n      <div className={classes.container}>\n        {QRData ? (\n          <>\n            <Box alignItems=\"center\" display=\"flex\" flexDirection=\"column\">\n              <LocationCard location={QRData} />\n            </Box>\n            <Box\n              p={2}\n              display=\"flex\"\n              flexDirection=\"row\"\n              justifyContent=\"center\"\n            >\n              <Button\n                className={classes.scanAgain}\n                color=\"secondary\"\n                variant=\"contained\"\n                onClick={() => setQRData(null)}\n              >\n                Scan Again\n              </Button>\n              <Button\n                color=\"primary\"\n                variant=\"contained\"\n                onClick={handleCreate}\n              >\n                Check in\n              </Button>\n            </Box>\n          </>\n        ) : (\n          <Card>\n            <CardContent>\n              <Box position=\"relative\">\n                <QrReader\n                  delay={delay}\n                  onScan={handleScan}\n                  onError={() => {}}\n                  style={{\n                    width: '100%'\n                  }}\n                />\n              </Box>\n            </CardContent>\n          </Card>\n        )}\n      </div>\n    </SimpleModal>\n  );\n};\n\nconst mapStateToProps = state => ({\n  locations: state.locations.list,\n  registries: state.registries.list\n});\n\nconst mapDispatchToProps = dispatch => ({\n  createRegistry: data => dispatch(registryActions.createRegistry(data)),\n  resetRegistries: () => dispatch(registryActions.resetRegistries()),\n  getLocations: () => dispatch(locationActions.getLocations())\n});\n\nScanQRCodeModal.propTypes = {\n  createRegistry: PropTypes.func.isRequired,\n  resetRegistries: PropTypes.func.isRequired,\n  getLocations: PropTypes.func.isRequired,\n  locations: PropTypes.array.isRequired,\n  registries: PropTypes.array.isRequired,\n  onClose: PropTypes.func.isRequired,\n  loading: PropTypes.bool,\n  open: PropTypes.bool,\n  error: PropTypes.string\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ScanQRCodeModal);\n","import React, { useState } from 'react';\nimport clsx from 'clsx';\nimport PlacesAutocomplete, {\n  geocodeByAddress\n} from 'react-places-autocomplete';\nimport { makeStyles, TextField, Typography } from '@material-ui/core';\nimport theme from '../theme';\n\nconst useStyles = makeStyles({\n  suggestion: {\n    lineHeight: '1.33',\n    letterSpacing: '0.95px',\n    cursor: 'pointer',\n    padding: '5px 0',\n    '&:hover': {\n      backgroundColor: theme.palette.secondary.light\n    }\n  }\n});\n\nconst LocationSearchInput = props => {\n  const classes = useStyles();\n  const { onSelectedAddress, className } = props;\n  const [address, setAddress] = useState('');\n\n  const handleChange = selectedAddress => {\n    setAddress(selectedAddress);\n  };\n\n  const handleSelect = async selectedAddress => {\n    setAddress(selectedAddress);\n    geocodeByAddress(selectedAddress)\n      .then(results => {\n        onSelectedAddress(selectedAddress, results[0]);\n      })\n      .catch(error => console.error(error));\n  };\n\n  return (\n    <PlacesAutocomplete\n      value={address}\n      onChange={handleChange}\n      onSelect={handleSelect}\n      shouldFetchSuggestions={address.length > 3}\n      searchOptions={{ componentRestrictions: { country: 'ar' } }}\n      highlightFirstSuggestion\n    >\n      {({ getInputProps, suggestions, getSuggestionItemProps }) => (\n        <div className={className}>\n          <TextField\n            fullWidth\n            label=\"Search for a location\"\n            margin=\"normal\"\n            name=\"location\"\n            type=\"text\"\n            className={clsx('location-search-input')}\n            variant=\"outlined\"\n            {...getInputProps()}\n          />\n          <div className=\"autocomplete-dropdown-container\">\n            {suggestions.map(suggestion => {\n              return (\n                <div\n                  key={suggestion.placeId}\n                  {...getSuggestionItemProps(suggestion, {})}\n                >\n                  <Typography className={classes.suggestion} variant=\"h5\">\n                    {suggestion.description}\n                  </Typography>\n                </div>\n              );\n            })}\n          </div>\n        </div>\n      )}\n    </PlacesAutocomplete>\n  );\n};\n\nexport default LocationSearchInput;\n","import { google } from './axios';\n\nfunction getPhotos(placeId) {\n  const params = {\n    place_id: placeId,\n    key: process.env.REACT_APP_API_KEY_GOOGLE,\n    fields: 'photos'\n  };\n  return google.get('/maps/api/place/details/json', { params });\n}\n\nexport function getPhotoSourceFromReference(photoReference, width = 400) {\n  return `${process.env.REACT_APP_URL_GOOGLE}maps/api/place/photo?maxwidth=${width}&photoreference=${photoReference}&key=${process.env.REACT_APP_API_KEY_GOOGLE}`;\n}\n\nexport default getPhotos;\n","import React, { useEffect, useState } from 'react';\nimport {\n  Avatar,\n  Box,\n  Button,\n  Card,\n  CardContent,\n  makeStyles,\n  TextField\n} from '@material-ui/core';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport Alert from '@material-ui/lab/Alert';\nimport AlertTitle from '@material-ui/lab/AlertTitle';\nimport * as Yup from 'yup';\nimport { Formik } from 'formik';\nimport SimpleModal from '../SimpleModal';\nimport LocationSearchInput from '../LocationSearchInput';\nimport getPhotos, { getPhotoSourceFromReference } from '../../redux/api/photos';\nimport { actions } from '../../redux/modules/locations';\n\nconst useStyles = makeStyles(() => ({\n  fullWidth: {\n    width: '100%',\n    height: 'inherit',\n    maxHeight: '30vh'\n  }\n}));\n\nconst AddLocationModal = ({\n  onClose,\n  open,\n  createLocation,\n  resetLocations,\n  error,\n  locations,\n  loading\n}) => {\n  const [selectedAddress, setSelectedAddress] = useState(null);\n  const [placePhotos, setPlacePhotos] = useState({ index: 0, list: [] });\n  const classes = useStyles();\n\n  const handleClose = () => {\n    setPlacePhotos({ index: 0, list: [] });\n    resetLocations();\n    onClose();\n  };\n\n  const handleCreate = (values, imageUrl) => {\n    createLocation({\n      id: selectedAddress.place_id,\n      name: values.name,\n      description: values.description,\n      latitude: selectedAddress.geometry.location.lat(),\n      longitude: selectedAddress.geometry.location.lng(),\n      maximumCapacity: values.maximumCapacity,\n      openingTime: values.openingTime,\n      closingTime: values.closingTime,\n      logo: imageUrl\n    });\n  };\n\n  const getPictures = async address => {\n    try {\n      const { data } = await getPhotos(address.place_id);\n      setPlacePhotos({ index: 0, list: data.result.photos || [] });\n    } catch (err) {}\n  };\n\n  const photoSource =\n    placePhotos.list.length > 0\n      ? getPhotoSourceFromReference(\n          placePhotos.list[placePhotos.index].photo_reference\n        )\n      : '';\n\n  useEffect(() => {\n    if (selectedAddress) {\n      setPlacePhotos({ index: 0, list: [] });\n      getPictures(selectedAddress);\n    }\n  }, [selectedAddress]);\n\n  useEffect(() => {\n    if (!error && !loading) {\n      handleClose();\n    }\n  }, [error, loading, locations]);\n\n  return (\n    <SimpleModal title=\"Add a new location\" open={open} onClose={handleClose}>\n      <Card>\n        <CardContent>\n          <Box alignItems=\"center\" display=\"flex\" flexDirection=\"column\">\n            <LocationSearchInput\n              className={classes.fullWidth}\n              onSelectedAddress={(name, address) =>\n                setSelectedAddress({ ...address, name })\n              }\n            />\n          </Box>\n          {placePhotos.list.length > 1 && (\n            <>\n              <Box alignItems=\"center\" display=\"flex\" flexDirection=\"column\">\n                <Formik\n                  initialValues={{\n                    name: selectedAddress.name.split(',')[0],\n                    description: selectedAddress.formatted_address,\n                    maximumCapacity: '',\n                    openingTime: '9:00',\n                    closingTime: '18:00'\n                  }}\n                  validationSchema={Yup.object().shape({\n                    name: Yup.string()\n                      .max(255)\n                      .required('Name is required'),\n                    description: Yup.string()\n                      .max(255)\n                      .required('Description is required'),\n                    maximumCapacity: Yup.number()\n                      .integer()\n                      .min(1)\n                      .required('Maximum capacity is required'),\n                    openingTime: Yup.string().required(\n                      'Opening time is required'\n                    ),\n                    closingTime: Yup.string().required(\n                      'Closing time is required'\n                    )\n                  })}\n                  onSubmit={values => handleCreate(values, photoSource)}\n                >\n                  {({\n                    errors,\n                    handleBlur,\n                    handleChange,\n                    handleSubmit,\n                    touched,\n                    values\n                  }) => (\n                    <form\n                      id=\"create-location\"\n                      onSubmit={handleSubmit}\n                      className={classes.fullWidth}\n                    >\n                      <TextField\n                        error={Boolean(touched.name && errors.name)}\n                        fullWidth\n                        helperText={touched.name && errors.name}\n                        label=\"Name\"\n                        margin=\"normal\"\n                        name=\"name\"\n                        onBlur={handleBlur}\n                        onChange={handleChange}\n                        value={values.name}\n                        variant=\"outlined\"\n                      />\n                      <TextField\n                        error={Boolean(\n                          touched.description && errors.description\n                        )}\n                        fullWidth\n                        helperText={touched.description && errors.description}\n                        label=\"Description\"\n                        margin=\"normal\"\n                        name=\"description\"\n                        onBlur={handleBlur}\n                        onChange={handleChange}\n                        value={values.description}\n                        variant=\"outlined\"\n                      />\n                      <TextField\n                        error={Boolean(\n                          touched.maximumCapacity && errors.maximumCapacity\n                        )}\n                        fullWidth\n                        helperText={\n                          touched.maximumCapacity && errors.maximumCapacity\n                        }\n                        label=\"Maximum Capacity\"\n                        margin=\"normal\"\n                        name=\"maximumCapacity\"\n                        onBlur={handleBlur}\n                        onChange={handleChange}\n                        value={values.maximumCapacity}\n                        variant=\"outlined\"\n                      />\n                    </form>\n                  )}\n                </Formik>\n              </Box>\n              <Box alignItems=\"center\" display=\"flex\" flexDirection=\"column\">\n                <Avatar\n                  className={classes.fullWidth}\n                  alt=\"Place\"\n                  src={photoSource}\n                  variant=\"rounded\"\n                />\n              </Box>\n            </>\n          )}\n          {error && (\n            <Box\n              p={2}\n              alignItems=\"center\"\n              display=\"flex\"\n              flexDirection=\"column\"\n            >\n              <Alert className={classes.fullWidth} severity=\"error\">\n                <AlertTitle>Error</AlertTitle>\n                {error}\n              </Alert>\n            </Box>\n          )}\n          <Box\n            p={2}\n            display=\"flex\"\n            flexDirection=\"row\"\n            justifyContent=\"space-evenly\"\n          >\n            {placePhotos.list.length > 1 && (\n              <Button\n                className={classes.scanAgain}\n                color=\"secondary\"\n                variant=\"contained\"\n                disabled={placePhotos.list.length === 0}\n                onClick={() =>\n                  setPlacePhotos({\n                    index: (placePhotos.index + 1) % placePhotos.list.length,\n                    list: placePhotos.list\n                  })\n                }\n              >\n                Change image\n              </Button>\n            )}\n            <Button\n              color=\"primary\"\n              variant=\"contained\"\n              disabled={placePhotos.list.length === 0}\n              form=\"create-location\"\n              type=\"submit\"\n            >\n              Create location\n            </Button>\n          </Box>\n        </CardContent>\n      </Card>\n    </SimpleModal>\n  );\n};\n\nconst mapStateToProps = state => ({\n  locations: state.locations.list,\n  loading: state.locations.loading,\n  error: state.locations.error\n});\n\nconst mapDispatchToProps = dispatch => ({\n  createLocation: data => dispatch(actions.createLocation(data)),\n  resetLocations: () => dispatch(actions.resetLocations())\n});\n\nAddLocationModal.propTypes = {\n  createLocation: PropTypes.func.isRequired,\n  resetLocations: PropTypes.func.isRequired,\n  locations: PropTypes.array,\n  onClose: PropTypes.func.isRequired,\n  loading: PropTypes.bool,\n  open: PropTypes.bool,\n  error: PropTypes.string\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AddLocationModal);\n","import React, { useState } from 'react';\nimport { Link as RouterLink, useNavigate } from 'react-router-dom';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport {\n  AppBar,\n  Badge,\n  Box,\n  Hidden,\n  IconButton,\n  Toolbar,\n  makeStyles,\n  Typography\n} from '@material-ui/core';\n\nimport MenuIcon from '@material-ui/icons/Menu';\nimport NotificationsIcon from '@material-ui/icons/NotificationsOutlined';\nimport InputIcon from '@material-ui/icons/Input';\nimport CameraEnhanceIcon from '@material-ui/icons/CameraEnhance';\nimport HowToVoteIcon from '@material-ui/icons/HowToVote';\nimport RoomIcon from '@material-ui/icons/Room';\n\nimport Logo from 'src/components/Logo';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport LoadTestModal from '../../components/test/LoadTestModal';\nimport ScanQRCodeModal from '../../components/registry/ScanQRCodeModal';\nimport AddLocationModal from '../../components/location/AddLocationModal';\n\nconst useStyles = makeStyles(() => ({\n  title: {\n    display: 'flex',\n    alignItems: 'center',\n    '& > h3': {\n      marginLeft: '24px'\n    }\n  }\n}));\n\nconst TopBar = ({ className, onMobileNavOpen, user, ...rest }) => {\n  const classes = useStyles();\n  const navigate = useNavigate();\n  const [loadTestIsOpen, setLoadTestIsOpen] = useState(false);\n  const [scanQRCodeIsOpen, setScanQRCodeIsOpen] = useState(false);\n  const [addLocationIsOpen, setAddLocationIsOpen] = useState(false);\n  const [notifications] = useState(\n    [].filter(notification => !notification.shown)\n  );\n\n  return (\n    <AppBar className={clsx(classes.root, className)} elevation={0} {...rest}>\n      <Toolbar>\n        <RouterLink to=\"/app/dashboard\">\n          <div className={classes.title}>\n            <Logo />\n            <Hidden xsDown>\n              <Typography align=\"center\" color=\"textPrimary\" variant=\"h3\">\n                Yo Estuve Ahí App\n              </Typography>\n            </Hidden>\n          </div>\n        </RouterLink>\n        <Box flexGrow={1} />\n        <>\n          <Tooltip title=\"Load Test Result\">\n            <IconButton\n              color=\"inherit\"\n              onClick={() => {\n                setLoadTestIsOpen(true);\n              }}\n            >\n              <HowToVoteIcon />\n            </IconButton>\n          </Tooltip>\n          {user.status !== 'COVID Positive' && (\n            <Tooltip title=\"Scan a QR Code\">\n              <IconButton\n                color=\"inherit\"\n                onClick={() => {\n                  setScanQRCodeIsOpen(true);\n                }}\n              >\n                <CameraEnhanceIcon />\n              </IconButton>\n            </Tooltip>\n          )}\n          <Tooltip title=\"Add Location\">\n            <IconButton\n              color=\"inherit\"\n              onClick={() => {\n                setAddLocationIsOpen(true);\n              }}\n            >\n              <RoomIcon />\n            </IconButton>\n          </Tooltip>\n          <Tooltip\n            title={`You have ${notifications.length} pending notification${\n              notifications.length > 1 ? 's' : ''\n            }`}\n          >\n            <IconButton\n              color=\"inherit\"\n              onClick={() => {\n                navigate('/app/notifications', { replace: true });\n              }}\n            >\n              <Badge badgeContent={notifications.length} color=\"secondary\">\n                <NotificationsIcon />\n              </Badge>\n            </IconButton>\n          </Tooltip>\n          <Tooltip title=\"Log out\">\n            <IconButton\n              color=\"inherit\"\n              onClick={() => {\n                navigate('/logout', { replace: true });\n              }}\n            >\n              <InputIcon />\n            </IconButton>\n          </Tooltip>\n        </>\n        <Hidden mdUp>\n          <IconButton color=\"inherit\" onClick={onMobileNavOpen}>\n            <MenuIcon />\n          </IconButton>\n        </Hidden>\n      </Toolbar>\n      <LoadTestModal\n        open={loadTestIsOpen}\n        onClose={() => setLoadTestIsOpen(false)}\n      />\n      <ScanQRCodeModal\n        open={scanQRCodeIsOpen}\n        onClose={() => setScanQRCodeIsOpen(false)}\n      />\n      <AddLocationModal\n        open={addLocationIsOpen}\n        customer={user}\n        onClose={() => setAddLocationIsOpen(false)}\n      />\n    </AppBar>\n  );\n};\n\nTopBar.propTypes = {\n  className: PropTypes.string,\n  onMobileNavOpen: PropTypes.func,\n  user: PropTypes.shape({\n    name: PropTypes.string,\n    status: PropTypes.string,\n    email: PropTypes.string,\n    isAdministrator: PropTypes.bool\n  })\n};\n\nexport default TopBar;\n","import React, { useState } from 'react';\nimport { Outlet } from 'react-router-dom';\nimport { makeStyles } from '@material-ui/core';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport NavBar from './NavBar';\nimport TopBar from './TopBar';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    backgroundColor: theme.palette.background.dark,\n    display: 'flex',\n    height: '100%',\n    overflow: 'hidden',\n    width: '100%'\n  },\n  wrapper: {\n    display: 'flex',\n    flex: '1 1 auto',\n    overflow: 'hidden',\n    paddingTop: 64,\n    [theme.breakpoints.up('md')]: {\n      paddingLeft: 256\n    }\n  },\n  contentContainer: {\n    display: 'flex',\n    flex: '1 1 auto',\n    overflow: 'hidden'\n  },\n  content: {\n    flex: '1 1 auto',\n    height: '100%',\n    overflow: 'auto'\n  }\n}));\n\nconst DashboardLayout = props => {\n  const classes = useStyles();\n  const { user } = props;\n  const [isMobileNavOpen, setMobileNavOpen] = useState(false);\n\n  return (\n    <div className={classes.root}>\n      {user && (\n        <>\n          <TopBar user={user} onMobileNavOpen={() => setMobileNavOpen(true)} />\n          <NavBar\n            user={user}\n            onMobileClose={() => setMobileNavOpen(false)}\n            openMobile={isMobileNavOpen}\n          />\n        </>\n      )}\n      <div className={classes.wrapper}>\n        <div className={classes.contentContainer}>\n          <div className={classes.content}>\n            <Outlet />\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nconst mapStateToProps = state => ({\n  user: state.authentication.user\n});\n\nDashboardLayout.propTypes = {\n  user: PropTypes.shape({ name: PropTypes.string })\n};\n\nexport default connect(mapStateToProps, null)(DashboardLayout);\n","import React from 'react';\r\nimport clsx from 'clsx';\r\nimport PropTypes from 'prop-types';\r\nimport { AppBar, Toolbar, makeStyles, Typography } from '@material-ui/core';\r\nimport Logo from 'src/components/Logo';\r\n\r\nconst useStyles = makeStyles({\r\n  root: {},\r\n  toolbar: {\r\n    height: 64\r\n  },\r\n  title: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    '& > h3': {\r\n      marginLeft: '24px'\r\n    }\r\n  }\r\n});\r\n\r\nconst TopBar = ({ className, ...rest }) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <AppBar className={clsx(classes.root, className)} elevation={0} {...rest}>\r\n      <Toolbar className={classes.toolbar}>\r\n        <div className={classes.title}>\r\n          <Logo />\r\n          <Typography align=\"center\" color=\"textPrimary\" variant=\"h3\">\r\n            Yo Estuve Ahí App\r\n          </Typography>\r\n        </div>\r\n      </Toolbar>\r\n    </AppBar>\r\n  );\r\n};\r\n\r\nTopBar.propTypes = {\r\n  className: PropTypes.string\r\n};\r\n\r\nexport default TopBar;\r\n","import React from 'react';\nimport { Outlet } from 'react-router-dom';\nimport { makeStyles } from '@material-ui/core';\nimport TopBar from './TopBar';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    backgroundColor: theme.palette.background.default,\n    display: 'flex',\n    height: '100%',\n    overflow: 'hidden',\n    width: '100%'\n  },\n  wrapper: {\n    display: 'flex',\n    flex: '1 1 auto',\n    overflow: 'hidden',\n    paddingTop: 64\n  },\n  contentContainer: {\n    display: 'flex',\n    flex: '1 1 auto',\n    overflow: 'hidden'\n  },\n  content: {\n    flex: '1 1 auto',\n    height: '100%',\n    overflow: 'auto'\n  }\n}));\n\nconst MainLayout = () => {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <TopBar />\n      <div className={classes.wrapper}>\n        <div className={classes.contentContainer}>\n          <div className={classes.content}>\n            <Outlet />\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default MainLayout;\n","import React, { forwardRef } from 'react';\r\nimport { Helmet } from 'react-helmet';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Page = forwardRef(({\r\n  children,\r\n  title = '',\r\n  ...rest\r\n}, ref) => {\r\n  return (\r\n    <div\r\n      ref={ref}\r\n      {...rest}\r\n    >\r\n      <Helmet>\r\n        <title>{title}</title>\r\n      </Helmet>\r\n      {children}\r\n    </div>\r\n  );\r\n});\r\n\r\nPage.propTypes = {\r\n  children: PropTypes.node.isRequired,\r\n  title: PropTypes.string\r\n};\r\n\r\nexport default Page;\r\n","import React, { useState } from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport PerfectScrollbar from 'react-perfect-scrollbar';\nimport {\n  Box,\n  Card,\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TablePagination,\n  TableRow,\n  Typography,\n  makeStyles\n} from '@material-ui/core';\nimport CheckIcon from '@material-ui/icons/Check';\nimport NotInterestedIcon from '@material-ui/icons/NotInterested';\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  avatar: {\n    marginRight: theme.spacing(2)\n  }\n}));\n\nconst Results = ({ className, users, ...rest }) => {\n  const classes = useStyles();\n  const [limit, setLimit] = useState(10);\n  const [page, setPage] = useState(0);\n\n  const handleLimitChange = event => {\n    setLimit(event.target.value);\n  };\n\n  const handlePageChange = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  return (\n    <Card className={clsx(classes.root, className)} {...rest}>\n      <PerfectScrollbar>\n        <Box>\n          <Table>\n            <TableHead>\n              <TableRow>\n                <TableCell>Name</TableCell>\n                <TableCell>Email</TableCell>\n                <TableCell>Status</TableCell>\n                <TableCell>Registration date</TableCell>\n                <TableCell>Administrator</TableCell>\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {users.slice(page * limit, (page + 1) * limit).map(user => {\n                return (\n                  <TableRow hover key={user.id}>\n                    <TableCell>\n                      <Typography color=\"textPrimary\" variant=\"body1\">\n                        {user.name}\n                      </Typography>\n                    </TableCell>\n                    <TableCell>{user.email}</TableCell>\n                    <TableCell>{user.status}</TableCell>\n                    <TableCell>\n                      {user.createdAt && user.createdAt.format('MMMM D, YYYY')}\n                    </TableCell>\n                    <TableCell>\n                      {user.isAdministrator ? (\n                        <CheckIcon />\n                      ) : (\n                        <NotInterestedIcon />\n                      )}\n                    </TableCell>\n                  </TableRow>\n                );\n              })}\n            </TableBody>\n          </Table>\n        </Box>\n      </PerfectScrollbar>\n      <TablePagination\n        component=\"div\"\n        count={users.length}\n        onChangePage={handlePageChange}\n        onChangeRowsPerPage={handleLimitChange}\n        page={page}\n        rowsPerPage={limit}\n        rowsPerPageOptions={[5, 10, 25]}\n      />\n    </Card>\n  );\n};\n\nResults.propTypes = {\n  className: PropTypes.string,\n  users: PropTypes.arrayOf(PropTypes.shape({ name: PropTypes.string }))\n    .isRequired\n};\n\nexport default Results;\n","import React from 'react';\nimport PerfectScrollbar from 'react-perfect-scrollbar';\nimport {\n  Box,\n  Card,\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TableRow\n} from '@material-ui/core';\n\nconst NoResults = () => {\n  return (\n    <Card>\n      <PerfectScrollbar>\n        <Box>\n          <Table>\n            <TableHead>\n              <TableRow>\n                <TableCell>Name</TableCell>\n                <TableCell>Email</TableCell>\n                <TableCell>Status</TableCell>\n                <TableCell>Registration date</TableCell>\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              <TableRow hover>\n                <TableCell>No records found</TableCell>\n              </TableRow>\n            </TableBody>\n          </Table>\n        </Box>\n      </PerfectScrollbar>\n    </Card>\n  );\n};\n\nexport default NoResults;\n","import React, { useEffect } from 'react';\nimport { Box, Container, makeStyles } from '@material-ui/core';\nimport Page from 'src/components/Page';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport Results from './Results';\nimport { actions } from '../../../redux/modules/users';\nimport NoResults from '../../../components/NoResults';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    backgroundColor: theme.palette.background.dark,\n    minHeight: '100%',\n    paddingBottom: theme.spacing(3),\n    paddingTop: theme.spacing(3)\n  }\n}));\n\nconst UserListView = ({ users, getUsers }) => {\n  const classes = useStyles();\n\n  useEffect(() => {\n    getUsers();\n  }, [getUsers]);\n\n  return (\n    <Page className={classes.root} title=\"Customers\">\n      <Container maxWidth={false}>\n        <Box mt={3}>\n          {users.length > 0 ? <Results users={users} /> : <NoResults />}\n        </Box>\n      </Container>\n    </Page>\n  );\n};\n\nconst mapStateToProps = state => ({\n  users: state.users.list\n});\n\nconst mapDispatchToProps = dispatch => ({\n  getUsers: () => dispatch(actions.getUsers())\n});\n\nUserListView.propTypes = {\n  getUsers: PropTypes.func.isRequired,\n  users: PropTypes.arrayOf(PropTypes.shape({ name: PropTypes.string }))\n    .isRequired\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(UserListView);\n","import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport PerfectScrollbar from 'react-perfect-scrollbar';\r\nimport {\r\n  Box,\r\n  Card,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableHead,\r\n  TablePagination,\r\n  TableRow\r\n} from '@material-ui/core';\r\nimport MailIcon from '@material-ui/icons/Mail';\r\nimport DraftsIcon from '@material-ui/icons/Drafts';\r\n\r\nconst Results = ({ className, notifications, ...rest }) => {\r\n  const [limit, setLimit] = useState(10);\r\n  const [page, setPage] = useState(0);\r\n\r\n  const handleLimitChange = event => {\r\n    setLimit(event.target.value);\r\n  };\r\n\r\n  const handlePageChange = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  return (\r\n    <Card className={className} {...rest}>\r\n      <PerfectScrollbar>\r\n        <Box>\r\n          <Table>\r\n            <TableHead>\r\n              <TableRow>\r\n                <TableCell>Created At</TableCell>\r\n                <TableCell>Source</TableCell>\r\n                <TableCell>Content</TableCell>\r\n                <TableCell />\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {notifications\r\n                .slice(page * limit, (page + 1) * limit)\r\n                .map(notification => (\r\n                  <TableRow hover key={notification.id}>\r\n                    <TableCell>\r\n                      {notification.createdAt.format('MMMM D, YYYY HH:mm')}\r\n                    </TableCell>\r\n                    <TableCell>{notification.contagionSource.name}</TableCell>\r\n                    <TableCell>{notification.content}</TableCell>\r\n                    <TableCell>\r\n                      {notification.shown ? <DraftsIcon /> : <MailIcon />}\r\n                    </TableCell>\r\n                  </TableRow>\r\n                ))}\r\n            </TableBody>\r\n          </Table>\r\n        </Box>\r\n      </PerfectScrollbar>\r\n      <TablePagination\r\n        component=\"div\"\r\n        count={notifications.length}\r\n        onChangePage={handlePageChange}\r\n        onChangeRowsPerPage={handleLimitChange}\r\n        page={page}\r\n        rowsPerPage={limit}\r\n        rowsPerPageOptions={[5, 10, 25]}\r\n      />\r\n    </Card>\r\n  );\r\n};\r\n\r\nResults.propTypes = {\r\n  className: PropTypes.string,\r\n  notifications: PropTypes.array.isRequired\r\n};\r\n\r\nexport default Results;\r\n","import React, { useEffect } from 'react';\nimport { Box, Container, makeStyles } from '@material-ui/core';\nimport Page from 'src/components/Page';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport Results from './Results';\nimport NoResults from '../../../components/NoResults';\nimport { actions } from '../../../redux/modules/notifications';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    backgroundColor: theme.palette.background.dark,\n    minHeight: '100%',\n    paddingBottom: theme.spacing(3),\n    paddingTop: theme.spacing(3)\n  }\n}));\n\nconst NotificationListView = ({ notifications, getNotifications }) => {\n  const classes = useStyles();\n\n  useEffect(() => {\n    getNotifications();\n  }, [getNotifications]);\n\n  return (\n    <Page className={classes.root} title=\"Users\">\n      <Container maxWidth={false}>\n        <Box mt={3}>\n          {notifications.length > 0 ? (\n            <Results notifications={notifications} />\n          ) : (\n            <NoResults />\n          )}\n        </Box>\n      </Container>\n    </Page>\n  );\n};\n\nconst mapStateToProps = state => ({\n  notifications: state.notifications.list\n});\n\nconst mapDispatchToProps = dispatch => ({\n  getNotifications: () => dispatch(actions.getNotifications())\n});\n\nNotificationListView.propTypes = {\n  getNotifications: PropTypes.func.isRequired,\n  notifications: PropTypes.arrayOf(PropTypes.shape({ id: PropTypes.number }))\n    .isRequired\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(NotificationListView);\n","import React from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport { Bar } from 'react-chartjs-2';\nimport {\n  Box,\n  Button,\n  Card,\n  CardContent,\n  CardHeader,\n  Divider,\n  useTheme,\n  makeStyles,\n  colors\n} from '@material-ui/core';\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\nimport ArrowRightIcon from '@material-ui/icons/ArrowRight';\n\nconst useStyles = makeStyles(() => ({\n  root: {}\n}));\n\nconst ContagionsByDate = ({ className, ...rest }) => {\n  const classes = useStyles();\n  const theme = useTheme();\n\n  const data = {\n    datasets: [\n      {\n        backgroundColor: colors.indigo[500],\n        data: [18, 5, 19, 27, 29, 19, 20],\n        label: 'This year'\n      },\n      {\n        backgroundColor: colors.grey[200],\n        data: [11, 20, 12, 29, 30, 25, 13],\n        label: 'Last year'\n      }\n    ],\n    labels: ['1 Aug', '2 Aug', '3 Aug', '4 Aug', '5 Aug', '6 Aug']\n  };\n\n  const options = {\n    animation: false,\n    cornerRadius: 20,\n    layout: { padding: 0 },\n    legend: { display: false },\n    maintainAspectRatio: false,\n    responsive: true,\n    scales: {\n      xAxes: [\n        {\n          barThickness: 12,\n          maxBarThickness: 10,\n          barPercentage: 0.5,\n          categoryPercentage: 0.5,\n          ticks: {\n            fontColor: theme.palette.text.secondary\n          },\n          gridLines: {\n            display: false,\n            drawBorder: false\n          }\n        }\n      ],\n      yAxes: [\n        {\n          ticks: {\n            fontColor: theme.palette.text.secondary,\n            beginAtZero: true,\n            min: 0\n          },\n          gridLines: {\n            borderDash: [2],\n            borderDashOffset: [2],\n            color: theme.palette.divider,\n            drawBorder: false,\n            zeroLineBorderDash: [2],\n            zeroLineBorderDashOffset: [2],\n            zeroLineColor: theme.palette.divider\n          }\n        }\n      ]\n    },\n    tooltips: {\n      backgroundColor: theme.palette.background.default,\n      bodyFontColor: theme.palette.text.secondary,\n      borderColor: theme.palette.divider,\n      borderWidth: 1,\n      enabled: true,\n      footerFontColor: theme.palette.text.secondary,\n      intersect: false,\n      mode: 'index',\n      titleFontColor: theme.palette.text.primary\n    }\n  };\n\n  return (\n    <Card className={clsx(classes.root, className)} {...rest}>\n      <CardHeader\n        action={\n          <Button endIcon={<ArrowDropDownIcon />} size=\"small\" variant=\"text\">\n            Last 7 days\n          </Button>\n        }\n        title=\"Latest ContagionsByDate\"\n      />\n      <Divider />\n      <CardContent>\n        <Box height={400} position=\"relative\">\n          <Bar data={data} options={options} />\n        </Box>\n      </CardContent>\n      <Divider />\n      <Box display=\"flex\" justifyContent=\"flex-end\" p={2}>\n        <Button\n          color=\"primary\"\n          endIcon={<ArrowRightIcon />}\n          size=\"small\"\n          variant=\"text\"\n        >\n          Overview\n        </Button>\n      </Box>\n    </Card>\n  );\n};\n\nContagionsByDate.propTypes = {\n  className: PropTypes.string\n};\n\nexport default ContagionsByDate;\n","import React, { useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { Doughnut } from 'react-chartjs-2';\nimport {\n  Box,\n  Card,\n  CardContent,\n  CardHeader,\n  Divider,\n  Typography,\n  colors,\n  makeStyles,\n  useTheme\n} from '@material-ui/core';\nimport { connect } from 'react-redux';\nimport { actions } from '../../../redux/modules/users';\n\nconst useStyles = makeStyles(() => ({\n  root: {\n    height: '100%'\n  }\n}));\n\nconst UsersByStatus = ({ users, getUsers }) => {\n  const classes = useStyles();\n  const theme = useTheme();\n\n  const seed = {\n    Healthy: {\n      title: 'Healthy',\n      value: 0,\n      color: colors.indigo[500]\n    },\n    'COVID Positive': {\n      title: 'COVID Positive',\n      value: 0,\n      color: colors.red[600]\n    },\n    'Contagion Risk': {\n      title: 'Contagion Risk',\n      value: 0,\n      color: colors.orange[600]\n    }\n  };\n\n  users.reduce((accumulator, user) => {\n    accumulator[user.status].value += 100 / users.length;\n    return accumulator;\n  }, seed);\n\n  const data = {\n    datasets: [\n      {\n        data: Object.values(seed).map(data => Math.round(data.value)),\n        backgroundColor: Object.values(seed).map(data => data.color),\n        borderWidth: 8,\n        borderColor: colors.common.white,\n        hoverBorderColor: colors.common.white\n      }\n    ],\n    labels: Object.keys(seed)\n  };\n\n  const options = {\n    animation: false,\n    cutoutPercentage: 80,\n    layout: { padding: 0 },\n    legend: {\n      display: false\n    },\n    maintainAspectRatio: false,\n    responsive: true,\n    tooltips: {\n      backgroundColor: theme.palette.background.default,\n      bodyFontColor: theme.palette.text.secondary,\n      borderColor: theme.palette.divider,\n      borderWidth: 1,\n      enabled: true,\n      footerFontColor: theme.palette.text.secondary,\n      intersect: false,\n      mode: 'index',\n      titleFontColor: theme.palette.text.primary\n    }\n  };\n\n  useEffect(() => {\n    getUsers();\n  }, [getUsers]);\n\n  return (\n    <Card className={classes.root}>\n      <CardHeader title=\"Users by Status\" />\n      <Divider />\n      <CardContent>\n        <Box height={300} position=\"relative\">\n          <Doughnut data={data} options={options} />\n        </Box>\n        <Box display=\"flex\" justifyContent=\"center\" mt={2}>\n          {Object.values(seed).map(({ color, title, value }) => (\n            <Box key={title} p={1} textAlign=\"center\">\n              <Typography color=\"textPrimary\" variant=\"body1\">\n                {title}\n              </Typography>\n              <Typography style={{ color }} variant=\"h2\">\n                {Math.round(value)}%\n              </Typography>\n            </Box>\n          ))}\n        </Box>\n      </CardContent>\n    </Card>\n  );\n};\n\nconst mapStateToProps = state => ({\n  users: state.users.list\n});\n\nconst mapDispatchToProps = dispatch => ({\n  getUsers: () => dispatch(actions.getUsers())\n});\n\nUsersByStatus.propTypes = {\n  getUsers: PropTypes.func.isRequired,\n  users: PropTypes.arrayOf(PropTypes.shape({ name: PropTypes.string }))\n    .isRequired\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(UsersByStatus);\n","import React, { useState } from 'react';\nimport GoogleMapReact from 'google-map-react';\nimport StoreIcon from '@material-ui/icons/Store';\nimport { makeStyles } from '@material-ui/styles';\nimport QRCode from 'qrcode.react';\nimport theme from '../theme';\n\nconst useStyles = makeStyles({\n  marker: {\n    width: 'max-content',\n    color: theme.palette.secondary.light,\n    textShadow: '-1px 0 black, 0 1px black, 1px 0 black, 0 -1px black',\n    fontWeight: 'bolder',\n    fontSize: 'larger'\n  },\n  capacity: {\n    width: 'max-content',\n    color: theme.palette.primary.light,\n    textShadow: '-1px 0 black, 0 1px black, 1px 0 black, 0 -1px black',\n    fontWeight: 'bolder',\n    fontSize: 'larger',\n    paddingBottom: '10px'\n  }\n});\n\nconst Marker = ({ location }) => {\n  const { id, name, currentCapacity, maximumCapacity } = location;\n  const classes = useStyles();\n  const [showQR, setIsShowingQR] = useState(false);\n  const showMap = show => setIsShowingQR(show);\n\n  return (\n    <div\n      onMouseEnter={() => {\n        showMap(true);\n      }}\n      onMouseLeave={() => {\n        showMap(false);\n      }}\n    >\n      <StoreIcon color=\"primary\" fontSize=\"large\" />\n      <div className={classes.marker}>{name}</div>\n      <div className={classes.capacity}>\n        {`${maximumCapacity - currentCapacity} /  ${maximumCapacity}`}\n      </div>\n      {showQR && (\n        <div>\n          <QRCode value={String(id)} size={100} renderAs=\"svg\" />\n        </div>\n      )}\n    </div>\n  );\n};\n\nconst SimpleMap = ({ markers }) => {\n  const defaultProps = {\n    center: {\n      lat: -34.58,\n      lng: -58.44\n    },\n    zoom: 13\n  };\n\n  return (\n    <div style={{ height: '40vh', width: '100%' }}>\n      <GoogleMapReact\n        bootstrapURLKeys={{ key: process.env.REACT_APP_API_KEY_GOOGLE }}\n        defaultCenter={defaultProps.center}\n        defaultZoom={defaultProps.zoom}\n      >\n        {markers.map(marker => (\n          <Marker\n            key={marker.id}\n            lat={marker.latitude}\n            lng={marker.longitude}\n            location={marker}\n          />\n        ))}\n      </GoogleMapReact>\n    </div>\n  );\n};\n\nexport default SimpleMap;\n","import React, { useEffect } from 'react';\nimport { Container, Grid, makeStyles } from '@material-ui/core';\nimport Page from 'src/components/Page';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport ContagionsByDate from './ContagionsByDate';\nimport UsersByStatus from './UsersByStatus';\nimport SimpleMap from '../../../components/Map';\nimport { actions } from '../../../redux/modules/locations';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    backgroundColor: theme.palette.background.dark,\n    minHeight: '100%',\n    paddingBottom: theme.spacing(3),\n    paddingTop: theme.spacing(3)\n  }\n}));\n\nconst Dashboard = ({ locations, getLocations }) => {\n  const classes = useStyles();\n\n  useEffect(() => {\n    getLocations();\n  }, [getLocations]);\n\n  return (\n    <Page className={classes.root} title=\"Dashboard\">\n      <Container maxWidth={false}>\n        <Grid container spacing={3}>\n          <Grid item sm={12} md={12} lg={12} xl={12} xs={12}>\n            <SimpleMap markers={locations} />\n          </Grid>\n          <Grid item sm={12} md={6} lg={6} xl={6} xs={12}>\n            <ContagionsByDate />\n          </Grid>\n          <Grid item sm={12} md={6} lg={6} xl={6} xs={12}>\n            <UsersByStatus />\n          </Grid>\n        </Grid>\n      </Container>\n    </Page>\n  );\n};\n\nconst mapStateToProps = state => ({\n  locations: state.locations.list\n});\n\nconst mapDispatchToProps = dispatch => ({\n  getLocations: () => dispatch(actions.getLocations())\n});\n\nDashboard.propTypes = {\n  getLocations: PropTypes.func.isRequired,\n  locations: PropTypes.array.isRequired\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Dashboard);\n","import React, { useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport * as Yup from 'yup';\nimport { Formik } from 'formik';\nimport {\n  Box,\n  Button,\n  Container,\n  TextField,\n  Typography,\n  makeStyles\n} from '@material-ui/core';\nimport Page from 'src/components/Page';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport Alert from '@material-ui/lab/Alert';\nimport AlertTitle from '@material-ui/lab/AlertTitle';\nimport { actions } from '../../redux/modules/authentication';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    backgroundColor: theme.palette.background.dark,\n    height: '100%',\n    paddingBottom: theme.spacing(3),\n    paddingTop: theme.spacing(3)\n  }\n}));\n\nconst LoginView = props => {\n  const classes = useStyles();\n  const navigate = useNavigate();\n  const { login, user, loggingIn, error } = props;\n\n  const onSubmit = values => {\n    login(values);\n  };\n\n  useEffect(() => {\n    if (user) {\n      navigate('/app/dashboard', { replace: true });\n    }\n  }, [user, navigate]);\n\n  return (\n    <Page className={classes.root} title=\"Login\">\n      <Box\n        display=\"flex\"\n        flexDirection=\"column\"\n        height=\"100%\"\n        justifyContent=\"center\"\n      >\n        <Container maxWidth=\"sm\">\n          <Formik\n            initialValues={{\n              email: '',\n              password: ''\n            }}\n            validationSchema={Yup.object().shape({\n              email: Yup.string()\n                .email('Must be a valid email')\n                .max(255)\n                .required('Email is required'),\n              password: Yup.string()\n                .max(255)\n                .required('Password is required')\n            })}\n            onSubmit={onSubmit}\n          >\n            {({\n              errors,\n              handleBlur,\n              handleChange,\n              handleSubmit,\n              touched,\n              values\n            }) => (\n              <form onSubmit={handleSubmit}>\n                <Box mb={3}>\n                  <Typography color=\"textPrimary\" variant=\"h2\">\n                    Sign in\n                  </Typography>\n                  <Typography\n                    color=\"textSecondary\"\n                    gutterBottom\n                    variant=\"body2\"\n                  >\n                    #YoEstuveAhí\n                  </Typography>\n                </Box>\n                {error && (\n                  <Alert severity=\"error\">\n                    <AlertTitle>Error</AlertTitle>\n                    {error}\n                  </Alert>\n                )}\n                <Box mt={3} mb={1} />\n                <TextField\n                  error={Boolean(touched.email && errors.email)}\n                  fullWidth\n                  helperText={touched.email && errors.email}\n                  label=\"Email Address\"\n                  margin=\"normal\"\n                  name=\"email\"\n                  onBlur={handleBlur}\n                  onChange={handleChange}\n                  type=\"email\"\n                  value={values.email}\n                  variant=\"outlined\"\n                />\n                <TextField\n                  error={Boolean(touched.password && errors.password)}\n                  fullWidth\n                  helperText={touched.password && errors.password}\n                  label=\"Password\"\n                  margin=\"normal\"\n                  name=\"password\"\n                  onBlur={handleBlur}\n                  onChange={handleChange}\n                  type=\"password\"\n                  value={values.password}\n                  variant=\"outlined\"\n                />\n                <Box my={2}>\n                  <Button\n                    color=\"primary\"\n                    disabled={loggingIn}\n                    fullWidth\n                    size=\"large\"\n                    type=\"submit\"\n                    variant=\"contained\"\n                  >\n                    Sign in\n                  </Button>\n                </Box>\n              </form>\n            )}\n          </Formik>\n          <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n            {`Copyright © Yo Estuve Ahí App ${new Date().getFullYear()}`}\n          </Typography>\n        </Container>\n      </Box>\n    </Page>\n  );\n};\n\nconst mapStateToProps = state => ({\n  user: state.authentication.user,\n  loggingIn: state.authentication.loggingIn,\n  error: state.authentication.error\n});\n\nconst mapDispatchToProps = dispatch => ({\n  login: data => dispatch(actions.login(data))\n});\n\nLoginView.propTypes = {\n  login: PropTypes.func.isRequired,\n  loggingIn: PropTypes.bool,\n  error: PropTypes.string,\n  user: PropTypes.shape({ name: PropTypes.string })\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(LoginView);\n","import { useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { actions } from '../../redux/modules/authentication';\nimport { removeUserToken } from '../../components/authentication/session';\n\nconst LogoutView = props => {\n  const navigate = useNavigate();\n  const { logout, user } = props;\n\n  useEffect(() => {\n    logout();\n  }, [logout]);\n\n  useEffect(() => {\n    if (!user) {\n      removeUserToken();\n      navigate('/login', { replace: true });\n    }\n  }, [user, navigate]);\n\n  return null;\n};\n\nconst mapStateToProps = state => ({\n  user: state.authentication.user || null\n});\n\nconst mapDispatchToProps = dispatch => ({\n  logout: () => dispatch(actions.logout())\n});\n\nLogoutView.propTypes = {\n  logout: PropTypes.func.isRequired\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(LogoutView);\n","import React from 'react';\r\nimport {\r\n  Box,\r\n  Container,\r\n  Typography,\r\n  makeStyles\r\n} from '@material-ui/core';\r\nimport Page from 'src/components/Page';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    backgroundColor: theme.palette.background.dark,\r\n    height: '100%',\r\n    paddingBottom: theme.spacing(3),\r\n    paddingTop: theme.spacing(3)\r\n  },\r\n  image: {\r\n    marginTop: 50,\r\n    display: 'inline-block',\r\n    maxWidth: '100%',\r\n    width: 560\r\n  }\r\n}));\r\n\r\nconst NotFoundView = () => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Page\r\n      className={classes.root}\r\n      title=\"404\"\r\n    >\r\n      <Box\r\n        display=\"flex\"\r\n        flexDirection=\"column\"\r\n        height=\"100%\"\r\n        justifyContent=\"center\"\r\n      >\r\n        <Container maxWidth=\"md\">\r\n          <Typography\r\n            align=\"center\"\r\n            color=\"textPrimary\"\r\n            variant=\"h1\"\r\n          >\r\n            404: The page you are looking for isn’t here\r\n          </Typography>\r\n          <Typography\r\n            align=\"center\"\r\n            color=\"textPrimary\"\r\n            variant=\"subtitle2\"\r\n          >\r\n            You either tried some shady route or you came here by mistake.\r\n            Whichever it is, try using the navigation\r\n          </Typography>\r\n          <Box textAlign=\"center\">\r\n            <img\r\n              alt=\"Under development\"\r\n              className={classes.image}\r\n              src=\"/static/images/undraw_page_not_found_su7k.svg\"\r\n            />\r\n          </Box>\r\n        </Container>\r\n      </Box>\r\n    </Page>\r\n  );\r\n};\r\n\r\nexport default NotFoundView;\r\n","import React, { useState } from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport PerfectScrollbar from 'react-perfect-scrollbar';\nimport {\n  Box,\n  Card,\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TablePagination,\n  TableRow,\n  makeStyles\n} from '@material-ui/core';\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  avatar: {\n    marginRight: theme.spacing(2)\n  }\n}));\n\nconst Results = ({ className, registries, ...rest }) => {\n  const classes = useStyles();\n  const [limit, setLimit] = useState(10);\n  const [page, setPage] = useState(0);\n\n  const handleLimitChange = event => {\n    setLimit(event.target.value);\n  };\n\n  const handlePageChange = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  return (\n    <Card className={clsx(classes.root, className)} {...rest}>\n      <PerfectScrollbar>\n        <Box>\n          <Table>\n            <TableHead>\n              <TableRow>\n                <TableCell>User</TableCell>\n                <TableCell>Location</TableCell>\n                <TableCell>Entered at</TableCell>\n                <TableCell>Exited at</TableCell>\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {registries\n                .slice(page * limit, (page + 1) * limit)\n                .map(registry => {\n                  return (\n                    <TableRow hover key={registry.id}>\n                      <TableCell>{registry.customerName}</TableCell>\n                      <TableCell>{registry.locationName}</TableCell>\n                      <TableCell>\n                        {registry.entranceTime.format('MMMM D, YYYY HH:mm')}\n                      </TableCell>\n                      <TableCell>\n                        {registry.exitTime.isValid() &&\n                          registry.exitTime.format('HH:mm')}\n                      </TableCell>\n                    </TableRow>\n                  );\n                })}\n            </TableBody>\n          </Table>\n        </Box>\n      </PerfectScrollbar>\n      <TablePagination\n        component=\"div\"\n        count={registries.length}\n        onChangePage={handlePageChange}\n        onChangeRowsPerPage={handleLimitChange}\n        page={page}\n        rowsPerPage={limit}\n        rowsPerPageOptions={[5, 10, 25]}\n      />\n    </Card>\n  );\n};\n\nResults.propTypes = {\n  className: PropTypes.string,\n  registries: PropTypes.array.isRequired\n};\n\nexport default Results;\n","import React, { useEffect } from 'react';\nimport { Box, Container, makeStyles } from '@material-ui/core';\nimport Page from 'src/components/Page';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport Results from './Results';\nimport { actions } from '../../../redux/modules/registries';\nimport NoResults from '../../../components/NoResults';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    backgroundColor: theme.palette.background.dark,\n    minHeight: '100%',\n    paddingBottom: theme.spacing(3),\n    paddingTop: theme.spacing(3)\n  }\n}));\n\nconst RegistryList = ({ registries, getRegistries }) => {\n  const classes = useStyles();\n\n  useEffect(() => {\n    getRegistries();\n  }, [getRegistries]);\n\n  return (\n    <Page className={classes.root} title=\"Products\">\n      <Container maxWidth={false}>\n        <Box mt={3}>\n          {registries.length > 0 ? (\n            <Results registries={registries} />\n          ) : (\n            <NoResults />\n          )}\n        </Box>\n      </Container>\n    </Page>\n  );\n};\n\nconst mapStateToProps = state => ({\n  registries: state.registries.list\n});\n\nconst mapDispatchToProps = dispatch => ({\n  getRegistries: () => dispatch(actions.getRegistries())\n});\n\nRegistryList.propTypes = {\n  getRegistries: PropTypes.func.isRequired,\n  registries: PropTypes.array.isRequired\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(RegistryList);\n","import React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Box,\n  Button,\n  Card,\n  CardContent,\n  CardHeader,\n  Divider,\n  TextField\n} from '@material-ui/core';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport * as Yup from 'yup';\nimport Alert from '@material-ui/lab/Alert';\nimport AlertTitle from '@material-ui/lab/AlertTitle';\nimport { Formik } from 'formik';\nimport { connect } from 'react-redux';\nimport makeStyles from '@material-ui/core/styles/makeStyles';\nimport { actions } from '../../../redux/modules/authentication';\n\nconst useStyles = makeStyles(() => ({\n  root: {\n    width: '100%'\n  }\n}));\n\nconst UserDetails = props => {\n  const { updateDetails, loggingIn, error, user } = props;\n  const [detailsUpdated, setDetailsUpdated] = useState(false);\n  const [showConfirmation, setShowConfirmation] = useState(false);\n  const classes = useStyles();\n\n  const onSubmit = values => {\n    updateDetails(values);\n    setDetailsUpdated(true);\n  };\n\n  const handleCloseConfirmation = () => {\n    setDetailsUpdated(false);\n    setShowConfirmation(false);\n  };\n\n  useEffect(() => {\n    if (user && detailsUpdated) {\n      setShowConfirmation(true);\n    }\n  }, [user]);\n\n  if (!user) {\n    return null;\n  }\n\n  return (\n    <>\n      <Formik\n        initialValues={{\n          name: user.name,\n          isAdministrator: user.isAdministrator\n        }}\n        validationSchema={Yup.object().shape({\n          name: Yup.string()\n            .max(255)\n            .required('Name is required')\n        })}\n        onSubmit={onSubmit}\n      >\n        {({\n          errors,\n          handleBlur,\n          handleChange,\n          handleSubmit,\n          touched,\n          values\n        }) => (\n          <form onSubmit={handleSubmit}>\n            <Card>\n              <CardHeader title=\"Update User Details\" />\n              <Divider />\n              <CardContent>\n                {error && (\n                  <Alert severity=\"error\">\n                    <AlertTitle>Error</AlertTitle>\n                    {error}\n                  </Alert>\n                )}\n                <TextField\n                  error={Boolean(touched.name && errors.name)}\n                  fullWidth\n                  helperText={touched.name && errors.name}\n                  label=\"Name\"\n                  margin=\"normal\"\n                  name=\"name\"\n                  onBlur={handleBlur}\n                  onChange={handleChange}\n                  type=\"name\"\n                  value={values.name}\n                  variant=\"outlined\"\n                />\n                <FormControlLabel\n                  control={\n                    <Checkbox\n                      name=\"isAdministrator\"\n                      checked={values.isAdministrator}\n                      onChange={handleChange}\n                    />\n                  }\n                  label=\"Is Administrator\"\n                />\n              </CardContent>\n              <Divider />\n              <Box\n                p={2}\n                display=\"flex\"\n                flexDirection=\"row\"\n                justifyContent=\"space-evenly\"\n              >\n                <Button\n                  color=\"primary\"\n                  disabled={loggingIn}\n                  fullWidth\n                  size=\"large\"\n                  type=\"submit\"\n                  variant=\"contained\"\n                >\n                  Update\n                </Button>\n              </Box>\n            </Card>\n          </form>\n        )}\n      </Formik>\n      <Snackbar\n        open={showConfirmation}\n        autoHideDuration={5000}\n        onClose={handleCloseConfirmation}\n      >\n        <Alert\n          className={classes.root}\n          onClose={handleCloseConfirmation}\n          variant=\"filled\"\n          severity=\"success\"\n        >\n          User details were updated!\n        </Alert>\n      </Snackbar>\n    </>\n  );\n};\n\nconst mapStateToProps = state => ({\n  user: state.authentication.user,\n  loggingIn: state.authentication.loggingIn,\n  error: state.authentication.error\n});\n\nconst mapDispatchToProps = dispatch => ({\n  updateDetails: data => dispatch(actions.updateDetails(data))\n});\n\nUserDetails.propTypes = {\n  updateDetails: PropTypes.func.isRequired,\n  user: PropTypes.object,\n  loggingIn: PropTypes.bool,\n  error: PropTypes.string\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(UserDetails);\n","import React from 'react';\r\nimport { Container, makeStyles } from '@material-ui/core';\r\nimport Page from 'src/components/Page';\r\nimport UserDetails from './UserDetails';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    backgroundColor: theme.palette.background.dark,\r\n    minHeight: '100%',\r\n    paddingBottom: theme.spacing(3),\r\n    paddingTop: theme.spacing(3)\r\n  }\r\n}));\r\n\r\nconst SettingsView = () => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Page className={classes.root} title=\"Settings\">\r\n      <Container maxWidth={false}>\r\n        <UserDetails />\r\n      </Container>\r\n    </Page>\r\n  );\r\n};\r\n\r\nexport default SettingsView;\r\n","import React from 'react';\nimport { Box, Card, CardContent } from '@material-ui/core';\nimport QRCode from 'qrcode.react';\nimport SimpleModal from '../SimpleModal';\n\nconst QRCodeDisplayModal = props => {\n  const { onClose, open, value } = props;\n\n  const handleClose = () => {\n    onClose();\n  };\n\n  return (\n    <SimpleModal title=\"Print QR Code\" open={open} onClose={handleClose}>\n      <Card>\n        <CardContent>\n          <Box alignItems=\"center\" display=\"flex\" flexDirection=\"column\">\n            <QRCode value={`${value}`} size={150} renderAs=\"svg\" />\n          </Box>\n        </CardContent>\n      </Card>\n    </SimpleModal>\n  );\n};\n\nexport default QRCodeDisplayModal;\n","import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport PerfectScrollbar from 'react-perfect-scrollbar';\r\nimport {\r\n  Box,\r\n  Card,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableHead,\r\n  TablePagination,\r\n  TableRow,\r\n  Typography,\r\n  Avatar\r\n} from '@material-ui/core';\r\nimport QRCodeDisplayModal from '../../../components/location/QRCodeDisplayModal';\r\n\r\nconst Results = ({ locations }) => {\r\n  const [limit, setLimit] = useState(10);\r\n  const [page, setPage] = useState(0);\r\n  const [selectedLocation, setSelectedLocation] = useState(null);\r\n\r\n  const handleLimitChange = event => {\r\n    setLimit(event.target.value);\r\n  };\r\n\r\n  const handlePageChange = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleShowQRCode = locationId => {\r\n    setSelectedLocation(locationId);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Card>\r\n        <PerfectScrollbar>\r\n          <Box>\r\n            <Table>\r\n              <TableHead>\r\n                <TableRow>\r\n                  <TableCell>Logo</TableCell>\r\n                  <TableCell>Name</TableCell>\r\n                  <TableCell>Description</TableCell>\r\n                  <TableCell>Current Capacity</TableCell>\r\n                  <TableCell>Max Capacity</TableCell>\r\n                  <TableCell>Created By</TableCell>\r\n                  <TableCell>Created On</TableCell>\r\n                </TableRow>\r\n              </TableHead>\r\n              <TableBody>\r\n                {locations\r\n                  .slice(page * limit, (page + 1) * limit)\r\n                  .map(location => (\r\n                    <TableRow\r\n                      hover\r\n                      key={location.id}\r\n                      onClick={() => handleShowQRCode(location.id)}\r\n                    >\r\n                      <TableCell>\r\n                        <Avatar\r\n                          alt=\"Place\"\r\n                          src={location.logo}\r\n                          variant=\"rounded\"\r\n                        />\r\n                      </TableCell>\r\n                      <TableCell>\r\n                        <Box alignItems=\"center\" display=\"flex\">\r\n                          <Typography color=\"textPrimary\" variant=\"body1\">\r\n                            {location.name}\r\n                          </Typography>\r\n                        </Box>\r\n                      </TableCell>\r\n                      <TableCell>{location.description}</TableCell>\r\n                      <TableCell>\r\n                        {location.maximumCapacity - location.currentCapacity}\r\n                      </TableCell>\r\n                      <TableCell>{location.maximumCapacity}</TableCell>\r\n                      <TableCell>\r\n                        {location.createdBy && location.createdBy}\r\n                      </TableCell>\r\n                      <TableCell>\r\n                        {location.createdAt &&\r\n                          location.createdAt.format('MMMM D, YYYY')}\r\n                      </TableCell>\r\n                    </TableRow>\r\n                  ))}\r\n              </TableBody>\r\n            </Table>\r\n          </Box>\r\n        </PerfectScrollbar>\r\n        <TablePagination\r\n          component=\"div\"\r\n          count={locations.length}\r\n          onChangePage={handlePageChange}\r\n          onChangeRowsPerPage={handleLimitChange}\r\n          page={page}\r\n          rowsPerPage={limit}\r\n          rowsPerPageOptions={[5, 10, 25]}\r\n        />\r\n      </Card>\r\n      <QRCodeDisplayModal\r\n        open={!!selectedLocation}\r\n        value={selectedLocation}\r\n        onClose={() => setSelectedLocation(null)}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nResults.propTypes = {\r\n  locations: PropTypes.arrayOf(PropTypes.shape({ name: PropTypes.string }))\r\n    .isRequired\r\n};\r\n\r\nexport default Results;\r\n","import React, { useEffect } from 'react';\nimport { Box, Container, makeStyles } from '@material-ui/core';\nimport Page from 'src/components/Page';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport Results from './Results';\nimport { actions } from '../../../redux/modules/locations';\nimport NoResults from '../../../components/NoResults';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    backgroundColor: theme.palette.background.dark,\n    minHeight: '100%',\n    paddingBottom: theme.spacing(3),\n    paddingTop: theme.spacing(3)\n  }\n}));\n\nconst LocationListView = ({ locations, getLocations }) => {\n  const classes = useStyles();\n\n  useEffect(() => {\n    getLocations();\n  }, [getLocations]);\n\n  return (\n    <Page className={classes.root} title=\"Locations\">\n      <Container maxWidth={false}>\n        <Box mt={3}>\n          {locations.length > 0 ? (\n            <Results locations={locations} />\n          ) : (\n            <NoResults />\n          )}\n        </Box>\n      </Container>\n    </Page>\n  );\n};\n\nconst mapStateToProps = state => ({\n  locations: state.locations.list\n});\n\nconst mapDispatchToProps = dispatch => ({\n  getLocations: () => dispatch(actions.getLocations())\n});\n\nLocationListView.propTypes = {\n  getLocations: PropTypes.func.isRequired,\n  locations: PropTypes.array.isRequired\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(LocationListView);\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport PerfectScrollbar from 'react-perfect-scrollbar';\nimport {\n  Box,\n  Card,\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TablePagination,\n  TableRow,\n  Typography\n} from '@material-ui/core';\n\nconst Results = ({ tests }) => {\n  const [limit, setLimit] = useState(10);\n  const [page, setPage] = useState(0);\n\n  const handleLimitChange = event => {\n    setLimit(event.target.value);\n  };\n\n  const handlePageChange = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  return (\n    <Card>\n      <PerfectScrollbar>\n        <Box>\n          <Table>\n            <TableHead>\n              <TableRow>\n                <TableCell>Date Taken</TableCell>\n                <TableCell>Taken By</TableCell>\n                <TableCell>Result</TableCell>\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {tests.slice(page * limit, (page + 1) * limit).map(test => (\n                <TableRow hover key={test.id}>\n                  <TableCell>\n                    {test.dateTaken &&\n                      test.dateTaken.format('MMMM D, YYYY HH:mm')}\n                  </TableCell>\n                  <TableCell>\n                    <Box alignItems=\"center\" display=\"flex\">\n                      <Typography color=\"textPrimary\" variant=\"body1\">\n                        {test.takenBy}\n                      </Typography>\n                    </Box>\n                  </TableCell>\n                  <TableCell>\n                    {test.isPositive ? 'Positve' : 'Negative'}\n                  </TableCell>\n                </TableRow>\n              ))}\n            </TableBody>\n          </Table>\n        </Box>\n      </PerfectScrollbar>\n      <TablePagination\n        component=\"div\"\n        count={tests.length}\n        onChangePage={handlePageChange}\n        onChangeRowsPerPage={handleLimitChange}\n        page={page}\n        rowsPerPage={limit}\n        rowsPerPageOptions={[5, 10, 25]}\n      />\n    </Card>\n  );\n};\n\nResults.propTypes = {\n  tests: PropTypes.arrayOf(PropTypes.shape({ id: PropTypes.number })).isRequired\n};\n\nexport default Results;\n","import React, { useEffect } from 'react';\nimport { Box, Container, makeStyles } from '@material-ui/core';\nimport Page from 'src/components/Page';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport Results from './Results';\nimport { actions } from '../../../redux/modules/tests';\nimport NoResults from '../../../components/NoResults';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    backgroundColor: theme.palette.background.dark,\n    minHeight: '100%',\n    paddingBottom: theme.spacing(3),\n    paddingTop: theme.spacing(3)\n  }\n}));\n\nconst TestListView = ({ tests, getTests }) => {\n  const classes = useStyles();\n\n  useEffect(() => {\n    getTests();\n  }, [getTests]);\n\n  return (\n    <Page className={classes.root} title=\"Tests\">\n      <Container maxWidth={false}>\n        <Box mt={3}>\n          {tests.length > 0 ? <Results tests={tests} /> : <NoResults />}\n        </Box>\n      </Container>\n    </Page>\n  );\n};\n\nconst mapStateToProps = state => ({\n  tests: state.tests.list\n});\n\nconst mapDispatchToProps = dispatch => ({\n  getTests: () => dispatch(actions.getTests())\n});\n\nTestListView.propTypes = {\n  getTests: PropTypes.func.isRequired,\n  tests: PropTypes.array.isRequired\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TestListView);\n","import { useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nconst EnsureAuthentication = props => {\n  const { user, children } = props;\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    if (!user) {\n      navigate('/login', { replace: true });\n    }\n  }, [user, navigate]);\n\n  return children || null;\n};\n\nconst mapStateToProps = state => ({\n  user: state.authentication.user || null\n});\n\nEnsureAuthentication.defaultProps = {\n  user: null\n};\n\nEnsureAuthentication.propTypes = {\n  children: PropTypes.oneOfType([\n    PropTypes.arrayOf(PropTypes.node),\n    PropTypes.node\n  ]).isRequired,\n  user: PropTypes.shape({ name: PropTypes.string })\n};\nexport default connect(mapStateToProps)(EnsureAuthentication);\n","import React from 'react';\nimport { Navigate } from 'react-router-dom';\nimport DashboardLayout from 'src/layouts/DashboardLayout';\nimport MainLayout from 'src/layouts/MainLayout';\nimport UserListView from 'src/views/user/UserListView';\nimport NotificationListView from 'src/views/notification/NotificationListView';\nimport DashboardView from 'src/views/reports/DashboardView';\nimport LoginView from 'src/views/auth/LoginView';\nimport LogoutView from 'src/views/auth/LogoutView';\nimport NotFoundView from 'src/views/errors/NotFoundView';\nimport RegistryListView from 'src/views/registry/RegistryListView';\nimport SettingsView from 'src/views/settings/SettingsView';\nimport LocationListView from './views/location/LocationListView';\nimport TestListView from './views/test/TestListView';\nimport EnsureAuthentication from './components/authentication/EnsureAuthentication';\n\nconst routes = [\n  {\n    path: 'app',\n    element: (\n      <EnsureAuthentication>\n        <DashboardLayout />\n      </EnsureAuthentication>\n    ),\n    children: [\n      { path: 'users', element: <UserListView /> },\n      { path: 'notifications', element: <NotificationListView /> },\n      { path: 'dashboard', element: <DashboardView /> },\n      { path: 'locations', element: <LocationListView /> },\n      { path: 'tests', element: <TestListView /> },\n      { path: 'registry', element: <RegistryListView /> },\n      { path: 'settings', element: <SettingsView /> },\n      { path: '*', element: <Navigate to=\"/404\" /> }\n    ]\n  },\n  {\n    path: '/',\n    element: (\n      <MainLayout>\n        <LoginView />\n      </MainLayout>\n    ),\n    children: [\n      { path: 'login', element: <LoginView /> },\n      { path: 'logout', element: <LogoutView /> },\n      { path: '404', element: <NotFoundView /> },\n      { path: '*', element: <Navigate to=\"/404\" /> },\n      { path: '', element: <LoginView /> }\n    ]\n  }\n];\n\nexport default routes;\n","import 'react-perfect-scrollbar/dist/css/styles.css';\r\nimport React from 'react';\r\nimport { useRoutes } from 'react-router-dom';\r\nimport { ThemeProvider } from '@material-ui/core';\r\nimport GlobalStyles from 'src/components/GlobalStyles';\r\nimport 'src/mixins/chartjs';\r\nimport theme from 'src/theme';\r\nimport routes from 'src/routes';\r\nimport { Provider } from 'react-redux';\r\nimport store from './redux/store';\r\n\r\nconst App = () => {\r\n  const routing = useRoutes(routes);\r\n\r\n  return (\r\n    <Provider store={store}>\r\n      <ThemeProvider theme={theme}>\r\n        <GlobalStyles />\r\n        {routing}\r\n      </ThemeProvider>\r\n    </Provider>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { Provider } from 'react-redux';\nimport { BrowserRouter } from 'react-router-dom';\n\nimport store from './redux/store';\nimport * as serviceWorker from './serviceWorker';\nimport App from './App';\n\nReactDOM.render(\n  <Provider store={store}>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}